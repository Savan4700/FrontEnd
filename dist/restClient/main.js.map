{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Auth/Auth-guard.service.ts","webpack:///./src/app/Model/User.ts","webpack:///./src/app/Model/UserMaster.ts","webpack:///./src/app/Model/formData.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/ResponseWrapperDTO.ts","webpack:///./src/app/my-nav/Customer/create-customer/create-customer.component.css","webpack:///./src/app/my-nav/Customer/create-customer/create-customer.component.html","webpack:///./src/app/my-nav/Customer/create-customer/create-customer.component.ts","webpack:///./src/app/my-nav/Customer/create-customer/create-customer.service.ts","webpack:///./src/app/my-nav/Customer/customer-list/customer-list.component.css","webpack:///./src/app/my-nav/Customer/customer-list/customer-list.component.html","webpack:///./src/app/my-nav/Customer/customer-list/customer-list.component.ts","webpack:///./src/app/my-nav/Customer/customer-list/customer-list.service.ts","webpack:///./src/app/my-nav/Customer/customer.module.ts","webpack:///./src/app/my-nav/dashbaord/dashbaord.component.css","webpack:///./src/app/my-nav/dashbaord/dashbaord.component.html","webpack:///./src/app/my-nav/dashbaord/dashbaord.component.ts","webpack:///./src/app/my-nav/my-nav.component.css","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/my-nav/my-nav.module.ts","webpack:///./src/app/my-nav/my-nav.service.ts","webpack:///./src/app/router/app-routing.module.ts","webpack:///./src/app/shared/pipe/KeysPipe.ts","webpack:///./src/app/shared/pipe/OrderBy.ts","webpack:///./src/app/shared/pipe/order-by-date.pipe.ts","webpack:///./src/app/shared/pipe/show-noti-time.ts","webpack:///./src/app/shared/service/server-variable.service.ts","webpack:///./src/app/shared/service/utils.service.ts","webpack:///./src/app/shared/service/validation.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/signup-signin/form-submit/form-submit.component.css","webpack:///./src/app/signup-signin/form-submit/form-submit.component.html","webpack:///./src/app/signup-signin/form-submit/form-submit.component.ts","webpack:///./src/app/signup-signin/form-submit/form-submit.service.ts","webpack:///./src/app/signup-signin/login/login.component.css","webpack:///./src/app/signup-signin/login/login.component.html","webpack:///./src/app/signup-signin/login/login.component.ts","webpack:///./src/app/signup-signin/login/login.service.ts","webpack:///./src/app/signup-signin/signup-signin.component.css","webpack:///./src/app/signup-signin/signup-signin.component.html","webpack:///./src/app/signup-signin/signup-signin.component.ts","webpack:///./src/app/signup-signin/signup-signin.module.ts","webpack:///./src/app/signup-signin/signup-signin.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA,oEAAoE;AACzB;AACuE;AACnD;AACP;AAKxD;IAEI,mBACW,YAA0B,EAC1B,WAAyB,EACzB,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;IAGzB,CAAC;IACD,iCAAa,GAAb,UACI,SAAiC,EAAE,YAAoC,EAAE,YAAiC,EACzG,SAA+B;QAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC/B,OAAO,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACtE,CAAC;IACD,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI;YACA,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE;gBACrC,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aAC7B;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,KAAK,CAAC;SAChB;QACD,QAAQ;QACR,0BAA0B;QAC1B,qDAAqD;QACrD,qDAAqD;QACrD,2BAA2B;QAC3B,mBAAmB;QACnB,yCAAyC;QACzC,YAAY;QACZ,eAAe;QACf,qDAAqD;QACrD,6CAA6C;QAC7C,mBAAmB;QACnB,2CAA2C;QAC3C,2BAA2B;QAC3B,YAAY;QACZ,QAAQ;QAER,oBAAoB;QACpB,oBAAoB;QACpB,IAAI;IACR,CAAC;IA9CQ,SAAS;QADrB,gEAAU,EAAE;yCAIgB,0EAAY;YACb,mEAAY;YACjB,sDAAM;OALhB,SAAS,CA+CrB;IAAD,gBAAC;CAAA;AA/CqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACT4C;AAElE;IAAA;IA6HA,CAAC;IA7FA,sBAAW,sBAAI;QAJZ;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAkCE;;;WAGG;aACN,UAAgB,KAAa;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;;;OAxCA;IAMD,sBAAW,uBAAK;QAJb;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAkCE;;;WAGG;aACN,UAAiB,KAAa;YAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAxCA;IAMD,sBAAW,0BAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QAkCE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAxCA;IAMD,sBAAW,0BAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QAkCE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAxCA;IAMD,sBAAW,sBAAI;QAJZ;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAkCE;;;WAGG;aACN,UAAgB,KAAoB;YACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;;;OAxCA;IA+CD,sBAAW,oBAAE;QAJV;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,GAAG,CAAC;QACjB,CAAC;QAEE;;;WAGG;aACN,UAAc,KAAa;YAC1B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAClB,CAAC;;;OARA;IA/GE;QAFC,6DAAW,CAAC,IAAI,CAAC;QACjB,+DAAa,CAAC,IAAI,CAAC;;qCACA;IAIpB;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;;uCACA;IAKtB;QAFC,6DAAW,CAAC,OAAO,CAAC;QACpB,+DAAa,CAAC,OAAO,CAAC;;wCACA;IAIvB;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;2CACA;IAG1B;QADC,6DAAW,CAAC,UAAU,CAAC;;2CACE;IAI1B;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;kCACP,KAAK;uCAAS;IAqGjC,WAAC;CAAA;AA7HgB;;;;;;;;;;;;;;;;;;;;;;;;;;ACFiD;AAElE;IAAA;IAgOA,CAAC;IAhLA,sBAAW,0BAAE;QAJV;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,GAAG,CAAC;QACjB,CAAC;QA0EE;;;WAGG;aACN,UAAc,KAAa;YAC1B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QAClB,CAAC;;;OAhFA;IAMD,sBAAW,iCAAS;QAJjB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;QA0EE;;;WAGG;aACN,UAAqB,KAAa;YACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAhFA;IAMD,sBAAW,gCAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QA0EE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAhFA;IAMD,sBAAW,kCAAU;QAJlB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;QA0EE;;;WAGG;aACN,UAAsB,KAAa;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAhFA;IAMD,sBAAW,gCAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QA0EE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAhFA;IAMD,sBAAW,+BAAO;QAJf;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QA0EE;;;WAGG;aACN,UAAmB,KAAa;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAhFA;IAMD,sBAAW,6BAAK;QAJb;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QA0EE;;;WAGG;aACN,UAAiB,KAAa;YAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAhFA;IAMD,sBAAW,gCAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QA0EE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAhFA;IAMD,sBAAW,gCAAQ;QAJhB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QA0EE;;;WAGG;aACN,UAAoB,KAAa;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAhFA;IAMD,sBAAW,oCAAY;QAJpB;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,aAAa,CAAC;QAC3B,CAAC;QA0EE;;;WAGG;aACN,UAAwB,KAAa;YACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAhFD;IAwFD,sBAAW,4BAAI;QAJZ;;;WAGG;aACN;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAEE;;;WAGG;aACN,UAAgB,KAAa;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,CAAC;;;OARA;IAjNA;QAFC,6DAAW,CAAC,IAAI,CAAC;QACjB,+DAAa,CAAC,IAAI,CAAC;;2CACA;IAIpB;QAFC,6DAAW,CAAC,WAAW,CAAC;QACxB,+DAAa,CAAC,WAAW,CAAC;;kDACA;IAI3B;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAI1B;QAFC,6DAAW,CAAC,YAAY,CAAC;QACzB,+DAAa,CAAC,YAAY,CAAC;;mDACA;IAI5B;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAI1B;QAFC,6DAAW,CAAC,SAAS,CAAC;QACtB,+DAAa,CAAC,SAAS,CAAC;;gDACA;IAIzB;QAFC,6DAAW,CAAC,OAAO,CAAC;QACpB,+DAAa,CAAC,OAAO,CAAC;;8CACA;IAIvB;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAI1B;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAM1B;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;;6CACA;IAuLxB,iBAAC;CAAA;AAhOsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACF2C;AAIlE;IA6BE;IACA,CAAC;IAMD,sBAAW,4BAAI;QAJf;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;QAED;;;WAGG;aACH,UAAgB,KAAa;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OARA;IAcD,sBAAW,6BAAK;QAJhB;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QA0BD;;;WAGG;aACH,UAAiB,KAAa;YAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAhCA;IAMD,sBAAW,gCAAQ;QAJnB;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;QA0BD;;;WAGG;aACH,UAAoB,KAAa;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAhCA;IAMD,sBAAW,2BAAG;QAJd;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QA0BD;;;WAGG;aACH,UAAe,KAAa;YAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;;;OAhCA;IAMD,sBAAW,gCAAQ;QAJnB;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;QA0BD;;;WAGG;aACH,UAAoB,KAAa;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAhCA;IAsCD,sBAAW,oCAAY;QAJvB;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED;;;WAGG;aACH,UAAwB,KAAa;YACnC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OARA;IAcD,sBAAW,uCAAe;QAJ1B;;;WAGG;aACH;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC/B,CAAC;QAED;;;WAGG;aACH,UAA2B,KAAc;YACvC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC;;;OARA;IAnID;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;;6CACA;IAItB;QAFC,6DAAW,CAAC,OAAO,CAAC;QACpB,+DAAa,CAAC,OAAO,CAAC;;8CACA;IAIvB;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAI1B;QAFC,6DAAW,CAAC,KAAK,CAAC;QAClB,+DAAa,CAAC,KAAK,CAAC;;4CACA;IAIrB;QAFC,6DAAW,CAAC,UAAU,CAAC;QACvB,+DAAa,CAAC,UAAU,CAAC;;iDACA;IAI1B;QAFC,6DAAW,CAAC,cAAc,CAAC;QAC3B,+DAAa,CAAC,cAAc,CAAC;;qDACA;IAI9B;QAFC,6DAAW,CAAC,iBAAiB,CAAC;QAC9B,+DAAa,CAAC,iBAAiB,CAAC;;wDACC;IAoHpC,iBAAC;CAAA;AA/IsB;;;;;;;;;;;;ACJvB,+DAA+D,+H;;;;;;;;;;;ACA/D,yH;;;;;;;;;;;;;;;;;;;;;ACA0C;AAM1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAEhB,CAAC;IAHY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACO;AACS,CAAC,+CAA+C;AAC3E;AACA;AACgB;AACT;AACyB;AAKtD;AACzB,sDAAsD;AACY;AACvB;AACyB;AA6BpE;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE;gBACP,uEAAa;gBACb,2EAAgB;gBAChB,4DAAY;gBACZ,kEAAY,CAAC,OAAO,EAAE;gBACtB,oEAAS,CAAC,OAAO,EAAE;gBACnB,4FAAuB;gBACvB,gBAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,sEAAgB;gBAChB,cAAc;gBACd,yDAAU;aAIX;YACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;YACjC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,gEAAgB,EAAE,QAAQ,EAAE,oEAAoB,EAAE;gBAC7D,EAAE,OAAO,EAAE,gEAAgB,EAAE,QAAQ,EAAE,oEAAoB,EAAE;aAC9D;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CiC;AACvD;IAAA;IAmIA,CAAC;IApGG,sBAAW,oCAAI;QAJf;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QAmCD;;;WAGG;aACH,UAAgB,KAAa;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAzCA;IAMD,sBAAW,sCAAM;QAJjB;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED;;;WAGG;aACH,UAAkB,KAAa;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC;;;OARA;IAcD,sBAAW,uCAAO;QAJlB;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QAED;;;WAGG;aACH,UAAmB,KAAa;YAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OARA;IAwBD,sBAAW,oCAAI;QAJf;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QAGD;;;WAGG;aACH,UAAgB,KAAa;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;;;OATA;IAgBD,sBAAW,qCAAK;QAJhB;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAED;;;WAGG;aACH,UAAiB,KAAa;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;;;OARA;IAgBD,sBAAW,gDAAgB;QAJ3B;;;WAGG;aACH;YACI,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAClC,CAAC;QAED;;;WAGG;aACH,UAA4B,KAAc;YACtC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OARA;IAnHD;QAFC,6DAAW,CAAC,QAAQ,CAAC;QACrB,+DAAa,CAAC,QAAQ,CAAC;;uDACA;IAIxB;QAFC,6DAAW,CAAC,SAAS,CAAC;QACtB,+DAAa,CAAC,SAAS,CAAC;;wDACA;IAIzB;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;;qDACA;IAItB;QAFC,6DAAW,CAAC,OAAO,CAAC;QACpB,+DAAa,CAAC,OAAO,CAAC;;sDACA;IAIvB;QAFC,6DAAW,CAAC,MAAM,CAAC;QACnB,+DAAa,CAAC,MAAM,CAAC;;qDACA;IAKtB;QAFC,6DAAW,CAAC,kBAAkB,CAAC;QAC/B,+DAAa,CAAC,kBAAkB,CAAC;;iEACC;IA0GvC,yBAAC;CAAA;AAnI8B;;;;;;;;;;;;ACD/B,+DAA+D,2L;;;;;;;;;;;ACA/D,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACgB;AAOlE;IAEE,iCAAmB,qBAA2C;QAA3C,0BAAqB,GAArB,qBAAqB,CAAsB;IAAI,CAAC;IAEnE,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAGyC,8EAAqB;OAFnD,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AAK3C;IAEE;IAAgB,CAAC;IAFN,qBAAqB;QAHjC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,qBAAqB,CAGjC;IAAD,4BAAC;CAAA;AAHiC;;;;;;;;;;;;ACLlC,+DAA+D,mL;;;;;;;;;;;ACA/D,w0CAAw0C,kDAAkD,+4BAA+4B,oDAAoD,mCAAmC,SAAS,+BAA+B,gBAAgB,+BAA+B,eAAe,+BAA+B,YAAY,8oBAA8oB,iEAAiE,o1DAAo1D,8CAA8C,GAAG,6CAA6C,6tBAA6tB,8EAA8E,qCAAqC,iW;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh5L;AAEY;AACrB;AAOzC;IAIE,+BAAoB,gBAAoC,EAAU,OAAc;QAA5D,qBAAgB,GAAhB,gBAAgB,CAAoB;QAAU,YAAO,GAAP,OAAO,CAAO;IAAI,CAAC;IAErF,wCAAQ,GAAR;IACA,CAAC;IAPU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAKqC,0EAAmB,EAAkB,sDAAM;OAJrE,qBAAqB,CASjC;IAAD,4BAAC;CAAA;AATiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVS;AAE3C,uDAAuD;AACgB;AAExC;AACE;AACE;AAMnC;IAIE,6BAAoB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAI,CAAC;IAJxB,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,kDAAI;OAJnB,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACbsB;AACb;AACiB;AACsB;AACM;AAEtF,IAAM,aAAa,GAAY;IAC7B,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,EAAE;IAC5D;QACE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB;KACxD;IACD;QACE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,kGAAuB;KAChE;CACF,CAAC;AASF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAR1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;aACrC;YACD,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,CAAC,kGAAuB,EAAC,4FAAqB,CAAC;SAC9D,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvB3B,+DAA+D,+J;;;;;;;;;;;ACA/D,shG;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,+DAA+D,2I;;;;;;;;;;;ACA/D,mPAAmP,oCAAoC,qiGAAqiG,sDAAsD,yEAAyE,wDAAwD,s6F;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz8G;AAIqB;AACf;AAOhD;IAGE,wBAAoB,YAA0B,EAAQ,YAAyB;QAA3D,iBAAY,GAAZ,YAAY,CAAc;QAAQ,iBAAY,GAAZ,YAAY,CAAa;IAC/E,CAAC;IACD,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;IAErC,CAAC;IARU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIkC,0EAAY,EAAqB,4DAAY;OAHpE,cAAc,CAUxB;IAAD,qBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsC;AACV;AACvD,uHAAuH;AAChE;AACH;AACG;AACc;AACT;AAErD,SAAS,kBAAkB;IAChC,OAAO,wEAAc,CAAC;AACxB,CAAC;AAED,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD;QACE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gEAAc,EAAE,WAAW,EAAE,CAAC,kEAAS,CAAC,EAAE,QAAQ,EAAE;YAChF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;YACxD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,kBAAkB,EAAE;SAC3D;KACA;CACA,CAAC;AAaF;IACE;IACA,CAAC;IAFU,WAAW;QAXvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE,CAAC,oEAAsB,CAAC;YACjC,YAAY,EAAE;gBACV,gEAAc;gBACd,iFAAkB;aACnB;SACJ,CAAC;;OACW,WAAW,CAGvB;IAAD,kBAAC;CAAA;AAHuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCmB;AAEoB;AAC1B;AAMrC;IAUI,sBAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAP7C,SAAI,GAAG,OAAO,CAAC;QACf,SAAI,GAAG,IAAI,gDAAI,EAAE,CAAC;QAClB,aAAQ,GAAG;YACP,EAAC,UAAU,EAAC,WAAW,EAAC,KAAK,EAAC,EAAE,EAAC;YACjC,EAAC,UAAU,EAAC,UAAU,EAAC,KAAK,EAAC,EAAE,EAAC;YAChC,EAAC,UAAU,EAAC,YAAY,EAAC,KAAK,EAAC,EAAE,EAAC;SACrC,CAAC;IAC+C,CAAC;IAElD,qCAAc,GAAd;QACI,sFAAsF;QAClF,qDAAqD;QACzD,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEhC,CAAC;IAEM,6BAAM,GAAb;QACI,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,0CAA0C;QAC1C,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QAC1C,2CAA2C;QAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;IAC/D,CAAC;IA7BQ,YAAY;QAJxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAYmC,0EAAY;OAVpC,YAAY,CA+BxB;IAAD,mBAAC;CAAA;AA/BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmD;AAC7B;AACQ;AACoB;AACrB;AAC/C,SAAS,gBAAgB;IAC9B,OAAO,sFAAkB,CAAC;AAC5B,CAAC;AAEM,SAAS,cAAc;IAC5B,OAAO,iEAAW,CAAC;AACrB,CAAC;AAED,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,EAAE;IAC3D,EAAE,IAAI,EAAE,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE;IACxD,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE;IAC9C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;CAClC,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAC5B,CAAC;aACH;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,OAAO,EAAE,CAAC,oEAAsB,CAAC;YACjC,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC9BuB;AAEpD;IAAA;IAIA,CAAC;IAHC,4BAAS,GAAT,UAAU,KAAU,EAAE,IAAkB;QAAlB,kCAAkB;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,0BAA0B;IACvD,CAAC;IAHU,QAAQ;QADpB,0DAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;OACvB,QAAQ,CAIpB;IAAD,eAAC;CAAA;AAJoB;;;;;;;;;;;;;;;;;;;;;;ACDgB;AAIrC;IAAA;IA2BA,CAAC;IAzBC,2BAAS,GAAT,UAAU,GAAQ,EAAE,EAAiB;YAAhB,UAAe,EAAf,oCAAe;QAClC,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9B,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC/B,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChC,iBAAiB,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;YACrF,aAAa;YACb,IAAI,iBAAiB,EAAE;gBACrB,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE;oBAClC,OAAW,GAAG,SAAE,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAA3B,CAA2B,CAAC,CAAC;iBAC7D;gBACD,OAAW,GAAG,SAAE,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;aAC1E;YAED,YAAY;YACZ,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE;gBAClC,OAAW,GAAG,SAAE,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAA3B,CAA2B,CAAC,CAAC;aAC7D;YACD,OAAW,GAAG,SAAE,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAxC,CAAwC,CAAC,CAAC;SAC1E;IACH,CAAC;IA1BU,OAAO;QADnB,0DAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;OACb,OAAO,CA2BnB;IAAD,cAAC;CAAA;AA3BmB;AA6BpB,sFAAsF;;;;;;;;;;;;;;;;;;;;;;;;;AClCtF,+BAA+B;AACqB;AAIpD;IACI;IACA,CAAC;IACD,mCAAS,GAAT,UAAU,KAAoB,EAAE,IAAY;QAExC,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO,IAAI,CAAC;SAAE;QAEzE,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACtB,IAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC;YACzB,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;YACzB,IAAM,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC;YACzB,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;YACzB,IAAI,IAAI,KAAK,MAAM,EAAE;gBACjB,IAAI,GAAG,GAAG,GAAG,EAAE;oBACX,OAAO,CAAC,CAAC;iBACZ;qBAAM,IAAI,GAAG,GAAG,GAAG,EAAE;oBAClB,OAAO,CAAC,CAAC,CAAC;iBACb;qBAAM;oBACH,OAAO,CAAC,CAAC;iBACZ;aACJ;iBAAM;gBACH,IAAI,GAAG,GAAG,GAAG,EAAE;oBACX,OAAO,CAAC,CAAC;iBACZ;qBAAM,IAAI,GAAG,GAAG,GAAG,EAAE;oBAClB,OAAO,CAAC,CAAC,CAAC;iBACb;qBAAM;oBACH,OAAO,CAAC,CAAC;iBACZ;aACJ;QAEL,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;IAhCQ,eAAe;QAH3B,0DAAI,CAAC;YACF,IAAI,EAAE,aAAa;SACtB,CAAC;;OACW,eAAe,CAiC3B;IAAD,sBAAC;CAAA;AAjC2B;;;;;;;;;;;;;;;;;;;;;;;;;ACL5B,+BAA+B;AACqB;AAIpD;IAEI;IAEA,CAAC;IAED,oCAAS,GAAT,UAAU,MAAc,EAAE,IAAY;QAClC,IAAM,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAM,KAAK,GAAW,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChD,IAAM,IAAI,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE9C,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC9C,IAAM,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;QAClC,IAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACzC,IAAM,MAAM,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,OAAO,IAAI,IAAI,KAAK,MAAM,EAAE;YACxD,OAAO,SAAS,CAAC,kBAAkB,EAAE,CAAC;SACzC;aAAM;YACH,OAAO,SAAS,CAAC,cAAc,EAAE,CAAC;SACrC;IACL,CAAC;IApBQ,gBAAgB;QAH5B,0DAAI,CAAC;YACF,IAAI,EAAE,cAAc;SACvB,CAAC;;OACW,gBAAgB,CAqB5B;IAAD,uBAAC;CAAA;AArB4B;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AAE3C;IAwKE,UAAU;IACV;QAtKA,QAAG,GAAG,KAAK,CAAC;QACZ,yBAAoB,GAAG,KAAK,CAAC;QAC7B,gCAA2B,GAAG,YAAY,CAAC;QAE3C,2BAAsB,GAAG,OAAO,CAAC;QAEjC,qBAAgB,GAAG,8CAA8C,CAAC;QAElE,cAAc;QACd,aAAQ,GAAG,OAAO,CAAC;QACnB,6BAAwB,GAAG,mBAAmB,CAAC;QAC/C,8BAAyB,GAAG,wBAAwB,CAAC;QACrD,yBAAoB,GAAG,mBAAmB,CAAC;QAC3C,mBAAc,GAAG,aAAa,CAAC;QAC/B,6BAAwB,GAAG,uBAAuB,CAAC;QACnD,yBAAoB,GAAG,mBAAmB,CAAC;QAC3C,sBAAiB,GAAG,gBAAgB,CAAC;QACrC,2BAAsB,GAAG,qBAAqB,CAAC;QAC/C,sBAAiB,GAAG,gBAAgB,CAAC;QACrC,yBAAoB,GAAG,mBAAmB,CAAC;QAC3C,oCAA+B,GAAG,8BAA8B,CAAC;QACjE,oBAAe,GAAG,cAAc,CAAC;QACjC,8BAAyB,GAAG,wBAAwB,CAAC;QACrD,kBAAa,GAAG,YAAY,CAAC;QAC7B,qBAAgB,GAAG,eAAe,CAAC;QACnC,8BAAyB,GAAG,oBAAoB,CAAC;QACjD,+BAA0B,GAAG,qBAAqB,CAAC;QACnD,gCAA2B,GAAG,sBAAsB,CAAC;QACrD,sCAAiC,GAAG,gCAAgC,CAAC;QACrE,gDAA2C,GAAG,0CAA0C,CAAC;QACzF,kCAAkC;QAClC,6BAAwB,GAAG,uBAAuB,CAAC;QAEnD,SAAS;QACT,6CAAwC,GAAG,uCAAuC,CAAC;QAEnF,gBAAgB;QAChB,aAAQ,GAAG,UAAU;QACrB,iCAA4B,GAAG,CAAC,aAAa,EAAC,aAAa,CAAC,CAAC;QAC7D,8BAAyB,GAAG,wBAAwB,CAAC;QACrD,4BAAuB,GAAG,sBAAsB,CAAC;QACjD,qCAAgC,GAAG,+BAA+B,CAAC;QACnE,kCAA6B,GAAG,4BAA4B,CAAC;QAC7D,qCAAgC,GAAG,+BAA+B,CAAC;QACnE,+CAA0C,GAAG,yCAAyC,CAAC;QAGvF,eAAe;QACf,gBAAW,GAAG,UAAU,CAAC;QACzB,+CAA0C,GAAG,yCAAyC,CAAC;QACvF,2CAAsC,GAAG,qCAAqC,CAAC;QAC/E,8CAAyC,GAAG,wCAAwC,CAAC;QACrF,gBAAW,GAAG,UAAU,CAAC;QACzB,mBAAc,GAAG,aAAa,CAAC;QAC/B,kDAA6C,GAAG,4CAA4C,CAAC;QAE7F,kBAAkB;QAClB,6BAAwB,GAAG,uBAAuB,CAAC;QACnD,mCAA8B,GAAG,6BAA6B,CAAC;QAC/D,iCAA4B,GAAG,2BAA2B,CAAC;QAC3D,cAAc;QACd,gBAAW,GAAG,UAAU,CAAC;QACzB,kBAAa,GAAG,YAAY,CAAC;QAC7B,yBAAoB,GAAG,mBAAmB,CAAC;QAE3C,iBAAiB;QACjB,sCAAiC,GAAG,gCAAgC,CAAC;QAErE,iBAAiB;QACjB,iCAA4B,GAAG,2BAA2B,CAAC;QAE3D,sBAAsB;QACtB,uCAAkC,GAAG,iCAAiC,CAAC;QAGvE,wBAAwB;QACxB,qCAAgC,GAAG,+BAA+B,CAAC;QAEnE,sBAAsB;QACtB,+BAA0B,GAAG,eAAe,CAAC;QAC7C,wBAAmB,GAAG,eAAe,CAAC;QACtC,yBAAoB,GAAG,gBAAgB,CAAC;QACxC,6BAAwB,GAAG,aAAa,CAAC;QACzC,gCAA2B,GAAG,gBAAgB,CAAC;QAC/C,6BAAwB,GAAG,aAAa,CAAC;QACzC,mCAA8B,GAAG,mBAAmB,CAAC;QACrD,mCAA8B,GAAG,mBAAmB,CAAC;QACrD,qCAAgC,GAAG,qBAAqB,CAAC;QACzD,yCAAoC,GAAG,wBAAwB,CAAC;QAChE,2CAAsC,GAAG,0BAA0B,CAAC;QACpE,wBAAmB,GAAG,gBAAgB,CAAC;QACvC,wBAAmB,GAAG,SAAS,CAAC;QAGhC,uBAAuB;QAEvB,sBAAiB,GAAG,aAAa,CAAC;QAClC,0BAAqB,GAAG,sBAAsB,CAAC;QAC/C,yCAAoC,GAAG,8BAA8B,CAAC;QACtE,uBAAkB,GAAG,cAAc,CAAC;QACpC,2BAAsB,GAAG,uBAAuB,CAAC;QAGjD,4BAA4B;QAE5B,qBAAgB,GAAG,SAAS,CAAC;QAI7B,uCAAkC,GAAG;YACnC,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,aAAa;YACnB,aAAa,EAAE,iBAAiB;YAChC,eAAe,EAAE,mBAAmB;YACpC,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,yCAAoC,GAAG;YACrC,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,eAAe;YACrB,aAAa,EAAE,mBAAmB;YAClC,eAAe,EAAE,qBAAqB;YACtC,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,IAAI;YACjB,UAAU,EAAE,KAAK;SAClB,CAAC;IAoCc,CAAC;IAnCjB;;;;;;MAME;IACF,qDAAqB,GAArB,UAAsB,eAAe,EAAE,iBAAiB,EAAE,UAAoB,EAAE,YAAsB;QACpG,OAAO;YACL,eAAe,EAAE,eAAe;YAChC,IAAI,EAAE,SAAS,GAAG,iBAAiB;YACnC,aAAa,EAAE,aAAa,GAAG,iBAAiB;YAChD,eAAe,EAAE,eAAe,GAAG,iBAAiB;YACpD,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,YAAY;SACzB,CAAC;IACJ,CAAC;IAED,oCAAoC;IACpC,gEAAgC,GAAhC,UAAiC,eAAe,EAAE,iBAAiB;QACjE,OAAO;YACL,eAAe,EAAE,eAAe;YAChC,IAAI,EAAE,SAAS,GAAG,iBAAiB;YACnC,aAAa,EAAE,aAAa,GAAG,iBAAiB;YAChD,eAAe,EAAE,eAAe,GAAG,iBAAiB;YACpD,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,MAAM;SAChB,CAAC;IACJ,CAAC;IAvKU,qBAAqB;QADjC,gEAAU,EAAE;;OACA,qBAAqB,CA0KjC;IAAD,4BAAC;CAAA;AA1KiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFJ;AAC9B,uEAAuE;AACvE,qEAAqE;AAClB;AACV;AACE;AACuB;AACT;AACqC;AAC9F,sGAAsG;AAClC;AAC7B;AACvC,gFAAgF;AAChF,mGAAmG;AACxD;AAI3C,uDAAuD;AACvD,0DAA0D;AAC1D,sCAAsC;AACtC,8CAA8C;AAE9C;IAuDE,sBACS,MAAc;IACrB,yCAAyC;IAClC,IAAgB,EAChB,qBAA4C,EAC5C,iBAAoC;IAC3C,yCAAyC;IAClC,QAAkB;QANlB,WAAM,GAAN,MAAM,CAAQ;QAEd,SAAI,GAAJ,IAAI,CAAY;QAChB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAEpC,aAAQ,GAAR,QAAQ,CAAU;QAvD3B,oBAAe,GAAG,SAAS,CAAC;QAC5B,iBAAY,GAAG,cAAc,CAAC;QAC9B,iBAAY,GAAG,MAAM,CAAC;QACtB,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;QAC7B,kBAAa,GAAS,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC3E,kBAAa,GAAS,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC3E,OAAE,GAAG,CAAC,CAAC;QAEP,yBAAoB,GAAG,EAAE,CAAC;QAC1B,sGAAsG;QACtG;;WAEG;QACH,qCAAqC;QACrC,QAAG,GAAG,gCAAgC,CAAC;QACvC,mEAAmE;QAGnE,6BAAwB,GAAG,mBAAmB,CAAC;QAC/C,uBAAkB,GAAG,oBAAoB,CAAC;QAC1C,kBAAa,GAAG,8BAA8B,CAAC;QAC/C,2BAAsB,GAAG,+CAA+C,CAAC;QACzE,oFAAoF;QACpF,oBAAe,GAAG,4CAA4C,CAAC;QAC/D,gBAAW,GAAG,CAAC,CAAC;QAChB,mBAAc,GAAG,IAAI,MAAM,CAAC,sEAAsE,CAAC,CAAC;QACpG,oBAAe,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAClD,eAAU,GAAG,MAAM,CAAC;QACpB,cAAS,GAAG,KAAK,CAAC;QA6BhB,mCAAmC;QACnC,oCAAoC;QACpC,iCAAiC;QACjC,4CAA4C;QAC5C,oBAAoB;QACpB,6BAA6B;QAC7B,OAAO;QACP,yBAAyB;QACzB,sCAAsC;QACtC,kCAAkC;QAClC,MAAM;QACN,MAAM;IACR,CAAC;IAED,+BAAQ,GAAR;QACE,0CAA0C;QAC1C,iCAAiC;QACjC,qBAAqB;QACrB,+EAA+E;QAC/E,yCAAyC;QACzC,eAAe;QACf,MAAM;QACN,cAAc;QAEd,iCAAiC;QACjC,kBAAkB;QAClB,eAAe;QACf,aAAa;QACb,sBAAsB;QACtB,mBAAmB;QACnB,+BAA+B;QAC/B,mBAAmB;QACnB,qBAAqB;QACrB,oBAAoB;QACpB,KAAK;QACL,MAAM;QACN,cAAc;IAChB,CAAC;IAGD,8CAA8C;IAC9C,oDAAoD;IACpD,0BAA0B;IAC1B,yCAAyC;IACzC,gCAAgC;IAChC,sBAAsB;IACtB,yBAAyB;IACzB,+BAA+B;IAC/B,aAAa;IACb,WAAW;IACX,qDAAqD;IACrD,SAAS;IACT,sBAAsB;IACtB,0CAA0C;IAC1C,UAAU;IACV,IAAI;IACJ;;;OAGG;IACH,mDAA4B,GAA5B,UAA6B,UAAU;QACrC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACf,IAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;QAClB,IAAM,MAAM,GAAG,EAAE,CAAC;QAElB,OAAO,EAAE,KAAK,GAAG,UAAU,EAAE;YAC3B,IAAM,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,EAAE,EAAE;gBACN,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC;aACzB;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;MAKE;IACF,oCAAa,GAAb,UAAc,GAAG;QACf,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,wCAAiB,GAAjB,UAAkB,GAAG;QACnB,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;YACrB,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;gBAChC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBACxD;gBACD,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;oBAChC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;iBACjB;qBAAM;oBACL,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClC;aACF;iBAAM;gBACL,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;oBAC/C,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;iBACjB;aACF;SACF;IACH,CAAC;IAED;;;;;;OAMG;IACH,oCAAa,GAAb,UAAc,cAAc,EAAE,OAAO,EAAE,MAAM,EAAE,QAAmD,EAAE,0BAAoC;QAAxI,iBAyDC;QAxDC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9E,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACrE;QAED,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC7E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,gDAAgD;YAChD,IAAI,KAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;YACD,oEAAoE;YACpE,wEAAwE;YACxE,0CAA0C;YAC1C,0BAA0B;YAC1B,wCAAwC;YACpC,oFAAoF;YACpF,oCAAoC;YACpC,yCAAyC;YACzC,YAAY;YACZ,IAAI;YACJ,6BAA6B;YAC7B,uCAAuC;YACvC,UAAU;YACZ,IAAI;YACJ,4DAA4D;YAC5D,wEAAwE;YACxE,6BAA6B;YAC7B,IAAI;YACJ,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC3B,IAAI;QACN,CAAC,EACC,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAG,CAAC,MAAM,oBAAe,GAAG,CAAC,OAAS,CAAC,CAAC;YAC7E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,6DAA6D;gBAC7D,2EAA2E;aAC5E;iBAAM;gBACL,+DAA+D;gBAC/D,kFAAkF;gBAClF,kCAAkC;gBAClC,OAAO;gBACP,mCAAmC;gBACjC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC/B,2BAA2B;gBAC3B,aAAa;gBACb,uHAAuH;gBACvH,MAAM;aACL;YACD,sBAAsB;QACxB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM;QACjB,uBAAuB;QACvB,mDAAmD;QACnD,OAAO,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,cAAI;YACnD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,GAAG,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1D,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;gBACvD,OAAO;aACR;QACH,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,GAAG;YACf,QAAC,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QAAvB,CAAuB,EAAE,IAAI,+DAAU,EAAE,CAC1C,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,mCAAY,GAAZ,UAAa,OAAO,EAAE,MAAM,EAAE,QAA4B,EAAE,eAAyB;QAArF,iBA4CC;QA3CC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,aAAG;YAC7B,IAAI,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;gBACxF,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAClD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9E,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACrE;QACD,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACxF,gDAAgD;YAChD,IAAI,KAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;YACD,oEAAoE;YAEpE,qEAAqE;YACnE,wEAAwE;YACxE,kFAAkF;YACpF,WAAW;YACT,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrB,IAAI;QACN,CAAC,EACC,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAG,CAAC,MAAM,oBAAe,GAAG,CAAC,OAAS,CAAC,CAAC;YAC7E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,6DAA6D;gBAC7D,2EAA2E;aAC5E;iBAAM;gBACL,+DAA+D;gBAC/D,mGAAmG;gBACnG,gHAAgH;gBAChH,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACrB;YACD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,mCAAY,GAAZ,UAAa,cAAc,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,QAAuD,EAAE,kBAA4B;QAAvI,iBA8CC;QA5CC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9E,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACrE;QACD,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CACnE,kBAAQ;YACN,gDAAgD;YAChD,IAAI,KAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;YACD,IAAM,cAAc,GAAG,6DAAW,CAAC,QAAQ,EAAE,4EAAkB,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,GAAG,IAAI,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE;gBAClE,IAAI,cAAc,EAAE;oBAClB,oFAAoF;oBACpF,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;iBAC3B;gBACD,IAAI,cAAc,CAAC,IAAI,IAAI,OAAO,cAAc,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAClE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;oBACjC,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACrC;aACF;QACH,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAG,CAAC,MAAM,oBAAe,GAAG,CAAC,OAAS,CAAC,CAAC;YAC7E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,2EAA2E;aAC5E;iBAAM;gBACL,IAAM,QAAQ,GAAG,6DAAW,CAAC,GAAG,CAAC,KAAK,EAAE,4EAAkB,CAAC,CAAC;gBAC5D,IAAI,QAAQ,CAAC,gBAAgB,EAAE;oBAC7B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpB,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBACnC;qBAAM;oBACL,gHAAgH;oBAChH,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,IAAI,kBAAkB,EAAE;wBACtB,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAClC;oBACD,6DAA6D;iBAC9D;aACF;YACD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD;;;;;;;OAOG;IACH,sCAAe,GAAf,UAAgB,cAAc,EAAE,OAAO,EAAE,EAAE,EAAE,QAAmD;QAAhG,iBAsDC;QArDC,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,4BAA4B,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC9E,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;SACrE;QACD,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,aAAG;YACzB,IAAI,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC5E,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClC,OAAO,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAC9D,kBAAQ;YACN,gDAAgD;YAChD,IAAI,KAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;aACpB;YAED,IAAM,cAAc,GAAG,6DAAW,CAAC,QAAQ,EAAE,4EAAkB,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,GAAG,IAAI,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE;gBAClE,IAAI,cAAc,EAAE;oBAClB,oFAAoF;oBACpF,4EAA4E;oBAC5E,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;iBAC3B;gBACD,IAAI,cAAc,CAAC,IAAI,IAAI,OAAO,cAAc,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAClE,QAAQ,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACrC;aACF;QACH,CAAC,EACD,UAAC,GAAsB;YACrB,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAG,CAAC,MAAM,oBAAe,GAAG,CAAC,OAAS,CAAC,CAAC;YAC7E,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,6DAA6D;gBAC7D,2EAA2E;aAC5E;iBAAM;gBACL,IAAM,QAAQ,GAAG,6DAAW,CAAC,GAAG,CAAC,KAAK,EAAE,4EAAkB,CAAC,CAAC;gBAC5D,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;oBAC9B,qCAAqC;oBACrC,KAAI,CAAC,2BAA2B,GAAG,QAAQ,CAAC,OAAO,CAAC;oBACpD,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;wBACzB,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC;iBACJ;qBAAM;oBACL,6DAA6D;oBAC7D,8GAA8G;iBAC/G;aACF;YACD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;MAIE;IACF,+BAAQ,GAAR,UAAS,UAAU,EAAE,YAAY;QAC/B,YAAY,CAAC,OAAO,CAAC,aAAG;YACtB,wCAAwC;YACxC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC;YAC1B,IAAI;QACN,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;QAClB,uBAAuB;IACzB,CAAC;IACD;;;;;OAKG;IACH,kCAAW,GAAX,UAAY,eAAe,EAAE,UAAU,EAAE,YAAY;QAEnD,IAAI,CAAC,eAAe,EAAE;YACpB,UAAU,GAAG,KAAK,CAAC;YACnB,OAAO,UAAU,CAAC;SACnB;QAED,KAAK,IAAM,CAAC,IAAI,YAAY,EAAE;YAC5B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBAC7B,UAAU,GAAG,KAAK,CAAC;gBACnB,OAAO,UAAU,CAAC;aACnB;SACF;QACD,UAAU,GAAG,IAAI,CAAC;QAClB,OAAO,UAAU,CAAC;IACpB,CAAC;IACD;;;OAGG;IACH,4CAAqB,GAArB,UAAsB,MAAM;QAC1B,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,GAAG,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxH,CAAC;IAGD,+DAA+D;IAC/D,6BAA6B;IAC7B,8BAA8B;IAC9B,kCAAkC;IAClC,MAAM;IACN,mDAAmD;IACnD,IAAI;IAEJ;;;;;OAKG;IACH,+CAA+C;IAC/C,qBAAqB;IACrB,8BAA8B;IAC9B,sBAAsB;IACtB,MAAM;IACN,0BAA0B;IAC1B,eAAe;IACf,eAAe;IACf,YAAY;IACZ,QAAQ;IACR,0BAA0B;IAC1B,+BAA+B;IAC/B,4BAA4B;IAC5B,4BAA4B;IAC5B,wBAAwB;IAExB,QAAQ;IACR,OAAO;IACP,IAAI;IAEJ,2BAA2B;IAC3B,4BAA4B;IAC5B,IAAI;IAEJ,8BAAO,GAAP;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACvD,CAAC;IAGD,6CAAsB,GAAtB,UAAuB,GAAG;QACxB,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;YACjE,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,kCAAW,GAAX;QAEE,IAAI,IAAI,GAAG,IAAI,gDAAI,EAAE,CAAC;QACtB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAC3F,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC5B,OAAO;SACR;QACD,IAAI,GAAG,6DAAW,CAAC,IAAI,EAAE,gDAAI,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAChD,CAAC;IAED,wBAAwB;IACxB,iCAAiC;IACjC,gGAAgG;IAChG,oCAAoC;IACpC,cAAc;IACd,MAAM;IACN,4EAA4E;IAC5E,gCAAgC;IAChC,IAAI;IACJ,0BAA0B;IAC1B,iCAAiC;IACjC,gGAAgG;IAChG,oCAAoC;IACpC,cAAc;IACd,MAAM;IACN,iGAAiG;IACjG,kCAAkC;IAClC,IAAI;IAEJ,+BAA+B;IAC/B,iCAAiC;IACjC,gGAAgG;IAChG,oCAAoC;IACpC,cAAc;IACd,MAAM;IACN,4EAA4E;IAC5E,iEAAiE;IACjE,IAAI;IAEJ,6BAA6B;IAC7B,iCAAiC;IACjC,gGAAgG;IAChG,oCAAoC;IACpC,cAAc;IACd,MAAM;IACN,4EAA4E;IAC5E,6DAA6D;IAC7D,IAAI;IAEJ,8CAAuB,GAAvB;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,IAAI,CAAC;SACb;QACD,OAAO,6DAAW,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,EAAE,gDAAI,CAAC,CAAC;IAChH,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE;YAC3G,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,GAAG,IAAI,gDAAI,EAAE,CAAC;QACtB,IAAI,GAAG,6DAAW,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC,EAAE,gDAAI,CAAC,CAAC;QAC9G,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/B,CAAC;IACD,sCAAe,GAAf;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAChG,CAAC;IACD,+BAAQ,GAAR;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9E,CAAC;IACD,qCAAc,GAAd;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1F,CAAC;IAGD,8DAA8D;IAE9D,0DAA0D;IAC1D,uEAAuE;IACvE,IAAI;IACJ,sDAAsD;IACtD,uEAAuE;IACvE,IAAI;IAEJ,2DAA2D;IAC3D,uCAAuC;IACvC,IAAI;IAEJ,4EAA4E;IAC5E,wBAAwB;IACxB,kEAAkE;IAClE,0CAA0C;IAC1C,oCAAoC;IACpC,4CAA4C;IAC5C,eAAe;IACf,oCAAoC;IACpC,8CAA8C;IAC9C,QAAQ;IACR,aAAa;IACb,mCAAmC;IACnC,kCAAkC;IAClC,4CAA4C;IAC5C,MAAM;IACN,2CAA2C;IAC3C,IAAI;IAEJ,yDAAyD;IACzD,sBAAsB;IACtB,gEAAgE;IAChE,6EAA6E;IAC7E,mCAAmC;IACnC,2DAA2D;IAC3D,qCAAqC;IACrC,cAAc;IACd,kCAAkC;IAClC,kCAAkC;IAClC,cAAc;IACd,aAAa;IACb,UAAU;IACV,QAAQ;IACR,MAAM;IACN,uBAAuB;IACvB,IAAI;IAEJ,yHAAyH;IACzH,0CAA0C;IAC1C,0CAA0C;IAC1C,MAAM;IACN,8BAA8B;IAC9B,IAAI;IACJ,4DAA4D;IAE5D,iCAAU,GAAV;QAAW,eAAQ;aAAR,UAAQ,EAAR,qBAAQ,EAAR,IAAQ;YAAR,0BAAQ;;QACjB,sBAAsB;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,6CAAsB,GAAtB,UAAuB,WAAW,EAAE,KAAK;QACvC,IAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,IAAM,cAAc,GAAG,WAAW,CAAC;QACnC,KAAK,IAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;oBACpC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE;wBACpF,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;qBAC/B;oBACD,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE;wBACnD,QAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;qBAClD;oBACD,OAAO,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;iBACvC;gBACD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACrE,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC7D;aACF;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAMD,6CAAsB,GAAtB,UAAuB,OAAO,EAAE,MAAM;QACpC,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAGD;;;OAGG;IACH,mCAAY,GAAZ;QACE,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAM,QAAQ,GAAG,gEAAgE,CAAC;QAClF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;SACtE;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,iCAAU,GAAV,UAAW,CAAC;QACV,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;IAMA;IACA,4CAAqB,GAArB,UAAsB,eAAe,EAAE,iBAAiB,EAAE,UAAoB,EAAE,YAAsB;QACpG,OAAO;YACL,eAAe,EAAE,eAAe;YAChC,IAAI,EAAE,SAAS,GAAG,iBAAiB;YACnC,aAAa,EAAE,aAAa,GAAG,iBAAiB;YAChD,eAAe,EAAE,eAAe,GAAG,iBAAiB;YACpD,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,UAAU;YACpB,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;YAC5C,2BAA2B;SAC5B,CAAC;IACJ,CAAC;IAED,oCAAoC;IACpC,uDAAgC,GAAhC,UAAiC,eAAe,EAAE,iBAAiB,EAAE,OAAgB;QACnF,OAAO;YACL,eAAe,EAAE,eAAe;YAChC,IAAI,EAAE,SAAS,GAAG,iBAAiB;YACnC,aAAa,EAAE,aAAa,GAAG,iBAAiB;YAChD,eAAe,EAAE,eAAe,GAAG,iBAAiB;YACpD,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SAC7C,CAAC;IACJ,CAAC;IAEM,iCAAU,GAAjB,UAAkB,GAAW;QAC3B,IAAM,IAAI,GAAmB,QAAQ,CAAC,IAAI,CAAC;QAC3C,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QACjB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IACD,yDAAkC,GAAlC,UAAmC,eAAe,EAAE,iBAAiB,EAAE,UAAoB,EAAE,YAAsB,EAAE,aAAsB;QACzI,OAAO;YACL,eAAe,EAAE,eAAe;YAChC,IAAI,EAAE,SAAS,GAAG,iBAAiB;YACnC,aAAa,EAAE,aAAa,GAAG,iBAAiB;YAChD,eAAe,EAAE,eAAe,GAAG,iBAAiB;YACpD,kBAAkB,EAAE,IAAI;YACxB,OAAO,EAAE,sBAAsB;YAC/B,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;YAChD,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE,aAAa;YACtB,cAAc,EAAE,CAAC;YACjB,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;SAC7C,CAAC;IACJ,CAAC;IACD,gDAAyB,GAAzB,UAA0B,MAAM;QAC9B,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IACD,gDAAyB,GAAzB;QACE,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,8CAAuB,GAAvB,UAAwB,OAAO;QAC7B,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,mDAAM,CAAC,OAAO,CAAC,EAAE;YACnB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACtC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YACtC,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,2CAAoB,GAApB,UAAqB,MAAc;QACjC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACD,mDAA4B,GAA5B;QAA6B,eAAQ;aAAR,UAAQ,EAAR,qBAAQ,EAAR,IAAQ;YAAR,0BAAQ;;QACnC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBACzE,OAAO,IAAI,CAAC;iBACb;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAGD,qDAA8B,GAA9B,UAA+B,GAAY;QACzC,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAED,gDAAyB,GAAzB,UAA0B,GAAW,EAAE,IAAa;QAClD,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,GAAG,CAAC,CAAC;SACV;QACD,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,EAAE;YACtB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,iDAA0B,GAA1B,UAA2B,QAAQ;QACjC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;YAC5E,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAsB;QAC7B,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IA5zBM,gCAAmB,GAAG,aAAa,CAAC;IAFhC,YAAY;QADxB,gEAAU,EAAE;yCAyDM,sDAAM;YAER,+DAAU;YACO,8EAAqB;YACzB,qEAAiB;YAE1B,wDAAQ;OA9DhB,YAAY,CAg0BxB;IAAD,mBAAC;CAAA;AAh0BwB;;;;;;;;;;;;;;;;;;;;;;;;;ACvBkB;AAI3C;IACE;QAEA,mCAAmC;QACnC,eAAe;QACf,oBAAe,GAAG,CAAC,CAAC;QACpB,qBAAgB,GAAG,CAAC,CAAC;QACrB,aAAa;QACb,iBAAY,GAAG,EAAE,CAAC;QAClB,cAAS,GAAG,EAAE,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAG,GAAG,CAAC;QACd,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC,CAAC,mBAAmB;QAClC,kBAAa,GAAG,EAAE,CAAC,CAAC,mBAAmB;QACvC,kBAAa,GAAG,EAAE,CAAC;QACnB,uBAAkB,GAAG,EAAE,CAAC,CAAC,mBAAmB;QAC5C,2BAAsB,GAAG,EAAE,CAAC;QAC5B,6BAAwB,GAAG,EAAE,CAAC;QAC9B,wBAAmB,GAAG,CAAC,CAAC;QACxB,kBAAa,GAAG,CAAC,CAAC;QAClB,SAAI,GAAG,CAAC,CAAC;QACT,mBAAc,GAAG,EAAE,CAAC;QACpB,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAG,EAAE,CAAC;QACrB,QAAG,GAAG,CAAC,CAAC;QACR,eAAU,GAAG,CAAC,CAAC;QACf,WAAM,GAAG,GAAG,CAAC;QACb,YAAO,GAAG,CAAC,CAAC;QACZ,kBAAa,GAAG,EAAE,CAAC;QACnB,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,EAAE,CAAC;QAClB,iBAAY,GAAG,EAAE,CAAC;QAClB,qBAAgB,GAAG,CAAC,CAAC;QACrB,cAAS,GAAG,EAAE,CAAC;QACf,UAAK,GAAG,EAAE,CAAC;QACX,YAAO,GAAG,EAAE,CAAC;QACb,eAAU,GAAG,EAAE,CAAC;QAChB,sCAAsC;QAEtC,4BAA4B;QAE5B,qBAAgB,GAAG,EAAE,CAAC;QACtB,kBAAa,GAAG,CAAC,CAAC;QAClB,iBAAY,GAAG,CAAC,CAAC;QACjB,mBAAc,GAAG,CAAC,CAAC;QACnB,iBAAY,GAAG,EAAE,CAAC;QAClB,iBAAY,GAAG,CAAC,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,EAAE,CAAC;QACpB,cAAS,GAAG,EAAE,CAAC;QACf,iBAAY,GAAG,CAAC,CAAC;QACjB,sBAAiB,GAAG,EAAE,CAAC;QACvB,sBAAiB,GAAG,EAAE,CAAC;QACvB,2BAAsB,GAAG,EAAE,CAAC;QAC5B,+BAA0B,GAAG,EAAE,CAAC;QAChC,iCAA4B,GAAG,EAAE,CAAC;QAClC,4BAAuB,GAAG,EAAE,CAAC;QAC7B,sBAAiB,GAAG,EAAE,CAAC;QACvB,aAAQ,GAAG,EAAE,CAAC;QACd,uBAAkB,GAAG,EAAE,CAAC;QACxB,iBAAY,GAAG,CAAC,CAAC;QACjB,wBAAmB,GAAG,EAAE,CAAC;QACzB,YAAO,GAAG,CAAC,CAAC;QACZ,mBAAc,GAAG,CAAC,CAAC;QACnB,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QAChB,sBAAiB,GAAG,EAAE,CAAC;QACvB,uBAAkB,GAAG,EAAE,CAAC;QACxB,qBAAgB,GAAG,EAAE,CAAC;QACtB,qBAAgB,GAAG,EAAE,CAAC;QACtB,gCAAgC;QAEhC,gCAAgC;QAChC,uCAAuC;QACvC,SAAI,GAAG,yBAAyB,CAAC,CAAC,2CAA2C;QAC7E,eAAU,GAAG,yBAAyB,CAAC;QACvC,cAAS,GAAG,yBAAyB,CAAC;QACtC,kBAAa,GAAG,yBAAyB,CAAC;QAC1C,iBAAY,GAAG,UAAU,CAAC;QAC1B,2CAA2C;QAC3C,yBAAoB,GAAG,uBAAuB,CAAC;QAC/C,oDAA+C,GAAG,kBAAkB,CAAC;QACrE,oBAAe,GAAG,QAAQ,CAAC;QAC3B,yBAAoB,GAAG,QAAQ,CAAC;QAChC,gDAAgD;QAChD,+CAA0C,GAAG,+CAA+C,CAAC;QAC7F,wDAAmD,GAAG,QAAQ,CAAC;QAC/D,gCAA2B,GAAG,aAAa,CAAC;QAC5C,+CAA0C,GAAG,iBAAiB,CAAC;QAC/D,qCAAgC,GAAG,gBAAgB,CAAC;QACpD,qCAAgC,GAAG,wBAAwB,CAAC;QAC5D,4CAAuC,GAAG,6BAA6B,CAAC;QACxE,sBAAiB,GAAG,sEAAsE,CAAC;QAC3F,sEAAsE;QACtE,2EAA2E;QAC3E,kCAA6B,GAC3B,iEAAiE,CAAC;QACpE,kCAA6B,GAC3B,iEAAiE,CAAC;QACpE,yBAAoB,GAAG,gBAAgB,CAAC;QACxC,uBAAkB,GAAG,UAAU,CAAC;QAChC,wBAAmB,GAAG,YAAY,CAAC;QACnC,4BAAuB,GAAG,aAAa,CAAC;QACxC,6BAAwB,GAAG,aAAa,CAAC;QACzC,2BAAsB,GAAG,4BAA4B,CAAC;QACtD,yBAAoB,GAClB,oEAAoE,CAAC;QACrE,sEAAsE;QACxE,uBAAkB,GAAG,8CAA8C,CAAC;QACpE,oCAAoC;QAEpC,2BAA2B;QAC3B,gBAAgB;QAChB,wBAAmB,GAAG,2BAA2B,CAAC;QAClD,oBAAe,GAAG,sBAAsB,CAAC;QACzC,uBAAkB,GAAG,0BAA0B,CAAC;QAEhD,uBAAkB,GAAG,iCAAiC,CAAC;QACvD,mBAAc,GAAG,4BAA4B,CAAC;QAC9C,sBAAiB,GAAG,gCAAgC,CAAC;QACrD,0BAAqB,GAAG,oCAAoC,CAAC;QAC7D,cAAc;QAEd,QAAQ;QACR,sBAAiB,GAAG,wCAAwC,CAAC;QAC7D,2BAAsB,GAAG,8BAA8B,CAAC;QACxD,YAAY;QAEZ,sBAAsB;QACtB,2BAAsB,GAAG,4BAA4B,CAAC;QACtD,uBAAkB,GAAG,wBAAwB,CAAC;QAC9C,wBAAmB,GAAG,yBAAyB,CAAC;QAChD,4BAAuB,GAAG,8BAA8B,CAAC;QACzD,2BAAsB,GAAG,8BAA8B,CAAC;QACxD,0BAAqB,GAAG,2BAA2B,CAAC;QACpD,2BAAsB,GAAG,4BAA4B,CAAC;QACtD,6BAAwB,GAAG,mBAAmB,CAAC;QAC/C,8BAAyB,GAAG,wBAAwB,CAAC;QACrD,uBAAkB,GAAG,6BAA6B,CAAC;QACnD,yCAAoC,GAAG,0BAA0B,CAAC;QAElE,2BAA2B;QAE3B,iBAAY,GAAG,0BAA0B,CAAC;QAC1C,yBAAoB,GAAG,kCAAkC,CAAC;QAC1D,0BAAqB,GAAG,mCAAmC,CAAC;QAC5D,wBAAmB,GAAG,gCAAgC,CAAC;QACvD,uBAAkB,GAAG,+BAA+B,CAAC;QACrD,4BAAuB,GAAG,oCAAoC,CAAC;QAC/D,2BAAsB,GAAG,mCAAmC,CAAC;QAC7D,4BAAuB,GAAG,qCAAqC,CAAC;QAChE,2BAAsB,GAAG,qCAAqC,CAAC;QAC/D,4BAAuB,GAAG,mDAAmD,CAAC;QAC9E,gBAAW,GAAG,yBAAyB,CAAC;QACxC,yBAAyB;QAEzB,sCAAsC;QACtC,2BAAsB,GAAG,2BAA2B,CAAC;QACrD,2BAAsB,GAAG,2BAA2B,CAAC;QACrD,0BAAqB,GAAG,0BAA0B,CAAC;QACnD,wBAAmB,GAAG,wBAAwB,CAAC;QAC/C,yBAAoB,GAAG,0BAA0B,CAAC;QAClD,sBAAiB,GAAG,+BAA+B,CAAC;QACpD,iBAAY,GAAG,kBAAkB,CAAC;QAClC,mBAAc,GAAG,oBAAoB,CAAC;QAEtC,0BAAqB,GAAG,8CAA8C,CAAC;QACvE,0BAAqB,GAAG,8CAA8C,CAAC;QACvE,yBAAoB,GAAG,6CAA6C,CAAC;QACrE,uBAAkB,GAAG,gCAAgC,CAAC;QACtD,wBAAmB,GAAG,0BAA0B,CAAC;QACjD,qBAAgB,GAAG,+BAA+B,CAAC;QACnD,gBAAW,GAAG,+BAA+B,CAAC;QAC9C,kBAAa,GAAG,iCAAiC,CAAC;QAElD,mBAAmB;QACnB,gCAAgC;QAChC,yBAAoB,GAAG,0BAA0B,CAAC;QAClD,+BAA0B,GAAG,iCAAiC,CAAC;QAC/D,4CAAuC,GACrC,oCAAoC,CAAC;QACvC,mCAA8B,GAAG,oCAAoC,CAAC;QACtE,kBAAa,GAAG,mBAAmB,CAAC;QACpC,6BAAwB,GAAG,2BAA2B,CAAC;QACvD,4BAAuB,GAAG,iCAAiC,CAAC;QAC5D,qBAAgB,GAAG,sBAAsB,CAAC;QAC1C,4BAAuB,GAAG,sBAAsB,CAAC;QACjD,wBAAmB,GAAG,4CAA4C,CAAC;QACnE,0CAAqC,GACnC,iDAAiD,CAAC;QACpD,kCAA6B,GAC3B,iDAAiD,CAAC;QACpD,iBAAY,GAAG,gCAAgC,CAAC;QAChD,oBAAe,GAAG,6BAA6B,CAAC;QAChD,iBAAiB;QAEjB,iBAAiB;QACjB,wBAAmB,GAAG,yBAAyB,CAAC;QAChD,uBAAkB,GAAG,wBAAwB,CAAC;QAC9C,mBAAc,GAAG,oBAAoB,CAAC;QACtC,iBAAY,GAAG,oBAAoB,CAAC;QACpC,sBAAiB,GAAG,uBAAuB,CAAC;QAC5C,8BAAyB,GAAG,+BAA+B,CAAC;QAC5D,8BAAyB,GAAG,+BAA+B,CAAC;QAC5D,0BAAqB,GAAG,2BAA2B,CAAC;QACpD,uBAAkB,GAAG,yBAAyB,CAAC;QAC/C,uBAAkB,GAAG,wBAAwB,CAAC;QAC9C,yBAAoB,GAAG,0BAA0B,CAAC;QAClD,qBAAgB,GAAG,sBAAsB,CAAC;QAC1C,qCAAgC,GAAG,mCAAmC,CAAC;QAEvE,+BAA+B;QAE/B,gDAAgD;QAChD,2BAAsB,GAAG,4BAA4B,CAAC;QACtD,2BAAsB,GAAG,6BAA6B,CAAC;QACvD,mCAA8B,GAAG,kCAAkC,CAAC;QACpE,oCAA+B,GAAG,sCAAsC,CAAC;QACzE,qCAAgC,GAAG,oCAAoC,CAAC;QACxE,gCAA2B,GAAG,iCAAiC,CAAC;QAEhE,0BAAqB,GAAG,mCAAmC,CAAC;QAC5D,0BAAqB,GAAG,oCAAoC,CAAC;QAC7D,kCAA6B,GAAG,yCAAyC,CAAC;QAC1E,mCAA8B,GAC5B,6CAA6C,CAAC;QAChD,oCAA+B,GAC7B,gDAAgD,CAAC;QACnD,+BAA0B,GAAG,8CAA8C,CAAC;QAE5E,qDAAqD;QACrD,wCAAwC;QAExC,sBAAiB,GAAG,uBAAuB,CAAC;QAC5C,kBAAa,GAAG,uBAAuB,CAAC;QACxC,wCAAwC;QAExC,2BAAsB,GAAG,8BAA8B,CAAC;QACxD,oBAAe,GAAG,uBAAuB,CAAC;QAC1C,uBAAkB,GAAG,8BAA8B,CAAC;QACpD,kBAAa,GAAG,qBAAqB,CAAC;QACtC,kBAAa,GAAG,qBAAqB,CAAC;QAEtC,gCAA2B,GAAG,mCAAmC,CAAC;QAClE,iBAAY,GAAG,kBAAkB,CAAC;QAClC,kBAAa,GAAG,qBAAqB,CAAC;QACtC,mBAAc,GAAG,sBAAsB,CAAC;QACxC,qBAAgB,GAAG,uBAAuB,CAAC;QAC3C,sBAAiB,GAAG,wBAAwB,CAAC;QAC7C,wBAAmB,GAAG,2BAA2B,CAAC;QAElD,kCAAkC;QAClC,uBAAkB,GAAG,yCAAyC,CAAC;QAC/D,sBAAiB,GAAG,wCAAwC,CAAC;QAC7D,wBAAmB,GAAG,0CAA0C,CAAC;QACjE,qBAAgB,GAAG,4CAA4C,CAAC;QAChE,kBAAa,GAAG,2BAA2B,CAAC;QAC5C,6BAAwB,GAAG,sCAAsC,CAAC;QAClE,qBAAgB,GACd,sHAAsH,CAAC;QACzH,6BAAwB,GAAG,+BAA+B,CAAC;QAC3D,sBAAiB,GAAG,+BAA+B,CAAC;QACpD,2BAAsB,GAAG,yCAAyC,CAAC;QACnE,yBAAoB,GAAG,kCAAkC,CAAC;QAC1D,gBAAW,GAAG,yBAAyB,CAAC;QACxC,wBAAmB,GAAG,iCAAiC,CAAC;QACxD,mBAAc,GAAG,4BAA4B,CAAC;QAC9C,oBAAe,GAAG,8BAA8B,CAAC;QACjD,0BAAqB,GAAG,oCAAoC,CAAC;QAC7D,qBAAgB,GAAG,8BAA8B,CAAC;QAClD,sBAAiB,GAAG,uBAAuB,CAAC;QAC5C,wBAAmB,GAAG,0BAA0B,CAAC;QACjD,gCAA2B,GAAG,+BAA+B,CAAC;QAC9D,oCAA+B,GAAG,0CAA0C,CAAC;QAE7E,sCAAsC;QAEtC,6CAA6C;QAC7C,yBAAoB,GAAG,0BAA0B,CAAC;QAClD,0BAAqB,GAAG,6BAA6B,CAAC;QACtD,kBAAa,GAAG,2BAA2B,CAAC;QAC5C,0BAAqB,GAAG,mCAAmC,CAAC;QAC5D,4BAAuB,GAAG,6BAA6B,CAAC;QACxD,gCAA2B,GAAG,iCAAiC,CAAC;QAEhE,wBAAmB,GAAG,iCAAiC,CAAC;QACxD,2BAAsB,GAAG,oCAAoC,CAAC;QAC9D,yCAAoC,GAClC,iDAAiD,CAAC;QACpD,+BAA0B,GAAG,wCAAwC,CAAC;QACtE,sCAAsC;QAEtC,yBAAyB;QAEzB,wBAAwB;QACxB,wBAAmB,GAAG,6BAA6B,CAAC;QACpD,cAAS,GAAG,qBAAqB,CAAC;QAClC,sCAAiC,GAAG,kCAAkC,CAAC;QACvE,qCAAgC,GAAG,yCAAyC,CAAC;IA/S9D,CAAC;IADL,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAkT7B;IAAD,wBAAC;CAAA;AAlT6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ9B,sEAAsE;AACtE,uDAAuD;AACO;AACf;AACmB;AACnB;AACQ;AACmB;AACT;AACjE,gEAAgE;AACvB;AACgB;AACG;AAC5D,yEAAyE;AACzE,uEAAuE;AACvE,2GAA2G;AACpD;AACZ;AAC3C,0DAA0D;AAC1D,oDAAoD;AACpD,4FAA4F;AAC5F,qFAAqF;AACrF,mFAAmF;AACnF,kEAAkE;AAClE,8FAA8F;AAC9F,iFAAiF;AAEjF;;;GAGG;AA+CH;IAAA;IAeA,CAAC;qBAfY,YAAY;IACvB;;;OAGG;IACI,oBAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,cAAY;YACtB,SAAS,EAAE;gBACT,mEAAY,EAAE,6EAAiB,EAAE,sFAAqB,EAAE,mEAAS;aAGhE;SACJ,CAAC;IACJ,CAAC;;IAdU,YAAY;QA9CxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY;gBACZ,kEAAmB;aASpB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY;gBACZ,oBAAoB;gBACpB,iBAAiB;gBACjB,mBAAmB;gBACnB,oBAAoB;gBACpB,iBAAiB;gBACjB,iBAAiB;gBACjB,qBAAqB;gBACrB,iBAAiB;gBACjB,qBAAqB;gBACrB,sBAAsB;gBACtB,6BAA6B;gBAC7B,0BAA0B;gBAC1B,kEAAmB;gBACnB,qDAAO;gBACP,qEAAgB;gBAChB,wEAAe;gBACf,oBAAoB;gBACpB,6BAA6B;gBAC7B,mBAAmB;gBACnB,wDAAQ;aAGT;YACD,YAAY,EAAE,CAAC,qDAAO,EAAE,qEAAgB,EAAE,wEAAe,EAAE,wDAAQ;aAEhE;SACJ,CAAC;OACW,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;AC7EzB,iCAAiC,2BAA2B,2BAA2B,yBAAyB,4BAA4B,KAAK,wBAAwB,qBAAqB,wBAAwB,2BAA2B,sBAAsB,KAAK,yBAAyB,sBAAsB,2BAA2B,oBAAoB,sCAAsC,iBAAiB,gBAAgB,mBAAmB,KAAK,mBAAmB,kCAAkC,oBAAoB,KAAK,kBAAkB,kCAAkC,oBAAoB,KAAK,oBAAoB,uCAAuC,KAAK,eAAe,wBAAwB,KAAK,+CAA+C,2mD;;;;;;;;;;;ACA/vB,u5BAAu5B,0CAA0C,wLAAwL,oDAAoD,2NAA2N,mDAAmD,0YAA0Y,2CAA2C,0LAA0L,qDAAqD,8NAA8N,oDAAoD,6YAA6Y,yCAAyC,sLAAsL,mDAAmD,wNAAwN,kDAAkD,kfAAkf,yCAAyC,0LAA0L,mDAAmD,4NAA4N,kDAAkD,mZAAmZ,wCAAwC,+LAA+L,iDAAiD,qNAAqN,gDAAgD,6WAA6W,sCAAsC,mVAAmV,+CAA+C,+MAA+M,8CAA8C,4KAA4K,yCAAyC,kWAAkW,kDAAkD,wNAAwN,iDAAiD,qaAAqa,yCAAyC,sLAAsL,mDAAmD,wNAAwN,iDAAiD,oLAAoL,yCAAyC,iXAAiX,0DAA0D,kQAAkQ,yDAAyD,yrBAAyrB,+BAA+B,ygB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7oT;AACQ;AAMlC;AAC0C;AAOlE;IACE,6BACS,iBAAoC,EACpC,WAAwB,EACxB,YAA0B;QAF1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAEJ,sCAAQ,GAAR;QACE,CAAC,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAEnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnD,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;YACxJ,YAAY,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;YACpI,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;YACvJ,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrI,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC3I,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YAC3I,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;YACvJ,iBAAiB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpE,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;YACzH,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;SACtH,CAAC,CAAC;IACL,CAAC;IAtBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAG4B,sEAAiB;YACvB,0DAAW;YACV,0EAAY;OAJxB,mBAAmB,CAwB/B;IAAD,0BAAC;CAAA;AAxB+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfW;AACQ;AACD;AACgB;AAEzB;AACW;AACO;AAI3D;IAKE,mBAAmB;IACnB,qBAAqB;IACrB,yBAAyB;IACzB,kCAAkC;IAClC,0BAA0B;IAC1B,2BAA2B;IAC3B,KAAK;IACL,2BAAmB,YAA0B,EAAS,MAAc,EAAQ,MAAmB;QAA5E,iBAAY,GAAZ,YAAY,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAQ,WAAM,GAAN,MAAM,CAAa;QAX/F,aAAQ,GAAG,IAAI,0DAAU,EAAE,CAAC;QAE5B,iBAAY,GAAG,IAAI,4DAAU,EAAE,CAAC;QAU9B,OAAO,CAAC,GAAG,EAAE;IACf,CAAC;IAED,qCAAS,GAAT;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,OAAO,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC/E,wFAAwF;YACxF,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,OAAO;SACR;QACD,IAAM,UAAU,GAAG,2DAAS,CAAC,IAAI,CAAC,YAAY,EAAE,4DAAU,CAAC,CAAC;QAE5D,IAAI,CAAC,YAAY,CAAC,aAAa,CAC7B,IAAI,EACJ,aAAa,EACb,UAAU,EACV,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,6DAA6D;YAC7D,4BAA4B;YAC5B,sCAAsC;YACtC,uBAAuB;YACvB,0DAA0D;YAC1D,WAAW;YACX,2BAA2B;YAC3B,IAAI;QACN,CAAC,CACF,CAAC;IACJ,CAAC;IA1CU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAaiC,0EAAY,EAAiB,sDAAM,EAAe,mEAAY;OAZpF,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;;;;;;;;;;;;ACX9B,iCAAiC,2BAA2B,2BAA2B,yBAAyB,4BAA4B,KAAK,wBAAwB,qBAAqB,wBAAwB,2BAA2B,sBAAsB,KAAK,yBAAyB,sBAAsB,2BAA2B,oBAAoB,sCAAsC,iBAAiB,gBAAgB,mBAAmB,KAAK,mBAAmB,kCAAkC,oBAAoB,KAAK,kBAAkB,kCAAkC,oBAAoB,KAAK,kBAAkB,oBAAoB,KAAK,oBAAoB,uCAAuC,KAAK,+CAA+C,2kD;;;;;;;;;;;ACA9vB,oIAAoI,qYAAqY,uCAAuC,4cAA4c,kDAAkD,+aAA+a,uCAAuC,yaAAya,uDAAuD,yxC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl7D;AACH;AACkC;AACf;AAMlE;IACE,wBAAmB,YAA0B,EAAQ,WAAwB,EAAS,YAAyB;QAA5F,iBAAY,GAAZ,YAAY,CAAc;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAEnH,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC9C,wJAAwJ;YACxJ,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,mDAAmD,CAAC,CAAC,CAAC,CAAC;YAC1K,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;SAC5I,CAAC,CAAC;IACL,CAAC;IATU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAEiC,2DAAY,EAAqB,0DAAW,EAAsB,0EAAY;OADpG,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AAEuB;AAEf;AACe;AAE1B;AAIxC;IASE,sBAAmB,YAA0B,EAAS,MAAc;QAAjD,iBAAY,GAAZ,YAAY,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QARpE,iBAAY,GAGR;YACA,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IAEoE,CAAC;IAEzE,qCAAc,GAAd;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,UAAC,QAAQ;YAC/E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE;gBACvD,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;oBAClC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;oBAC1D,+GAA+G;gBACjH,CAAC,CACA,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAe,GAAf,UAAgB,GAAG;QACjB,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACxC,IAAI;gBACA,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,6DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,gDAAI,CAAC,CAAC,CAAC;gBACpF,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;gBAC/C,OAAO,EAAE,CAAC;aACb;YAAC,OAAO,KAAK,EAAE;gBACZ,MAAM,EAAE,CAAC;aACZ;QACL,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC;IArCY,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAUiC,0EAAY,EAAiB,mEAAM;OATzD,YAAY,CAsCxB;IAAD,mBAAC;CAAA;AAtCwB;;;;;;;;;;;;ACXzB,+DAA+D,+J;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;;;;;;;;;ACAoE;AACN;AAO9D;IACE,+BAAmB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IADpD,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAEwC,0EAAmB;OADhD,qBAAqB,CAgDjC;IAAD,4BAAC;CAAA;AAhDiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AACgB;AACK;AACP;AACW;AACQ;AAI1E,IAAM,eAAe,GAAY;IAC/B,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;IACrD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,8EAAqB,EAAE,QAAQ,EAAE;YAC5D,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sFAAmB,EAAE;SACjD,EAAC;CACH,CAAC;AAaF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAX9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACL,kEAAY;gBACX,4DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC;aAAC;YAC5C,YAAY,EAAE;gBACZ,qEAAc;gBACd,8EAAqB;gBACrB,sFAAmB;aACpB;YACD,SAAS,EAAE,EAAE;SACd,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AC7BY;AAK3C;IAEE;QADA,iBAAY,GAAG,EAAE,CAAC;IACH,CAAC;IAEhB,0CAAY,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IANU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;ACLhC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// import { UtilsService } from './../shared/service/utils.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanDeactivate, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { UtilsService } from '../shared/service/utils.service';\r\nimport { MyNavService } from '../my-nav/my-nav.service';\r\nexport interface CanComponentDeactivate {\r\n    canDeactivate: () => Promise<boolean> | boolean;\r\n}\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate , CanDeactivate<CanComponentDeactivate> {\r\n\r\n    constructor(\r\n        public utilsService: UtilsService,\r\n        public homeService: MyNavService,\r\n        public router: Router\r\n    ) {\r\n\r\n    }\r\n    canDeactivate(\r\n        component: CanComponentDeactivate, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot,\r\n         nextState?: RouterStateSnapshot): boolean | Promise<boolean> {\r\n             console.log('activedsss');\r\n        return component.canDeactivate ? component.canDeactivate() : true;\r\n    }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        try {\r\n            if (this.utilsService.isAuthenticated()) {\r\n                return true;\r\n            } else {\r\n                console.log('here')\r\n                this.homeService.logout();\r\n            }\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n        // try {\r\n        //     console.log(route);\r\n        //     if ( route.routeConfig.path === 'work_area') {\r\n        //         if (this.utilsService.isAuthenticated()) {\r\n        //             return true;\r\n        //         } else {\r\n        //             this.homeService.logout();\r\n        //         }\r\n        //     } else {\r\n        //         if (this.utilsService.isAuthenticated()) {\r\n        //             // this.utilsService.signin();\r\n        //         } else {\r\n        //             console.log('this is true');\r\n        //             return true;\r\n        //         }\r\n        //     }\r\n\r\n        // } catch (error) {\r\n        //     return false;\r\n        // }\r\n    }\r\n}\r\n","import { serializeAs, deserializeAs, serialize } from 'cerialize';\r\n\r\nexport class User {\r\n\r\n    @serializeAs('id')\r\n    @deserializeAs('id')\r\n    private _id: string;\r\n\r\n    @serializeAs('name')\r\n    @deserializeAs('name')\r\n    private _name: string;\r\n\r\n  \r\n    @serializeAs('email')\r\n    @deserializeAs('email')\r\n    private _email: string; \r\n  \r\n    @serializeAs('userName')\r\n    @deserializeAs('userName')\r\n    private _userName: string;\r\n    \r\n    @serializeAs('password')\r\n    private _password: string;\r\n    \r\n    @serializeAs('role')\r\n    @deserializeAs('role')\r\n    private _role: Array<object>;\r\n\r\n    \r\n\r\n    /**\r\n     * Getter name\r\n     * @return {string}\r\n     */\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n    /**\r\n     * Getter email\r\n     * @return {string}\r\n     */\r\n\tpublic get email(): string {\r\n\t\treturn this._email;\r\n\t}\r\n\r\n    /**\r\n     * Getter userName\r\n     * @return {string}\r\n     */\r\n\tpublic get userName(): string {\r\n\t\treturn this._userName;\r\n\t}\r\n\r\n    /**\r\n     * Getter password\r\n     * @return {string}\r\n     */\r\n\tpublic get password(): string {\r\n\t\treturn this._password;\r\n\t}\r\n\r\n    /**\r\n     * Getter role\r\n     * @return {Array<object>}\r\n     */\r\n\tpublic get role(): Array<object> {\r\n\t\treturn this._role;\r\n\t}\r\n\r\n    /**\r\n     * Setter name\r\n     * @param {string} value\r\n     */\r\n\tpublic set name(value: string) {\r\n\t\tthis._name = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter email\r\n     * @param {string} value\r\n     */\r\n\tpublic set email(value: string) {\r\n\t\tthis._email = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter userName\r\n     * @param {string} value\r\n     */\r\n\tpublic set userName(value: string) {\r\n\t\tthis._userName = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter password\r\n     * @param {string} value\r\n     */\r\n\tpublic set password(value: string) {\r\n\t\tthis._password = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter role\r\n     * @param {Array<object>} value\r\n     */\r\n\tpublic set role(value: Array<object>) {\r\n\t\tthis._role = value;\r\n\t}\r\n    \r\n\r\n    /**\r\n     * Getter id\r\n     * @return {string}\r\n     */\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n    /**\r\n     * Setter id\r\n     * @param {string} value\r\n     */\r\n\tpublic set id(value: string) {\r\n\t\tthis._id = value;\r\n\t}\r\n    \r\n}   ","import { serializeAs, deserializeAs, serialize } from 'cerialize';\r\n\r\nexport class UserMaster {\r\n  @serializeAs('id')\r\n  @deserializeAs('id')\r\n  private _id: string;\r\n\r\n  @serializeAs('firstName')\r\n  @deserializeAs('firstName')\r\n  private _firstName: string;\r\n\r\n  @serializeAs('lastName')\r\n  @deserializeAs('lastName')\r\n  private _lastName: string;\r\n  \r\n  @serializeAs('middleName')\r\n  @deserializeAs('middleName')\r\n  private _middleName: string;\r\n\r\n  @serializeAs('mobileNo')\r\n  @deserializeAs('mobileNo')\r\n  private _mobileNo: string;\r\n\r\n  @serializeAs('address')\r\n  @deserializeAs('address')\r\n  private _address: string;\r\n\r\n  @serializeAs('email')\r\n  @deserializeAs('email')\r\n  private _email: string;\r\n\r\n  @serializeAs('userName')\r\n  @deserializeAs('userName')\r\n  private _userName: string;\r\n\r\n  @serializeAs('password')\r\n  @deserializeAs('password')\r\n  private _password: string;\r\n  \r\n  private _confPassword: string;\r\n  \r\n  @serializeAs('role')\r\n  @deserializeAs('role')\r\n  private _role: string;\r\n\r\n\r\n    /**\r\n     * Getter id\r\n     * @return {string}\r\n     */\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n    /**\r\n     * Getter firstName\r\n     * @return {string}\r\n     */\r\n\tpublic get firstName(): string {\r\n\t\treturn this._firstName;\r\n\t}\r\n\r\n    /**\r\n     * Getter lastName\r\n     * @return {string}\r\n     */\r\n\tpublic get lastName(): string {\r\n\t\treturn this._lastName;\r\n\t}\r\n\r\n    /**\r\n     * Getter middleName\r\n     * @return {string}\r\n     */\r\n\tpublic get middleName(): string {\r\n\t\treturn this._middleName;\r\n\t}\r\n\r\n    /**\r\n     * Getter mobileNo\r\n     * @return {string}\r\n     */\r\n\tpublic get mobileNo(): string {\r\n\t\treturn this._mobileNo;\r\n\t}\r\n\r\n    /**\r\n     * Getter address\r\n     * @return {string}\r\n     */\r\n\tpublic get address(): string {\r\n\t\treturn this._address;\r\n\t}\r\n\r\n    /**\r\n     * Getter email\r\n     * @return {string}\r\n     */\r\n\tpublic get email(): string {\r\n\t\treturn this._email;\r\n\t}\r\n\r\n    /**\r\n     * Getter userName\r\n     * @return {string}\r\n     */\r\n\tpublic get userName(): string {\r\n\t\treturn this._userName;\r\n\t}\r\n\r\n    /**\r\n     * Getter password\r\n     * @return {string}\r\n     */\r\n\tpublic get password(): string {\r\n\t\treturn this._password;\r\n\t}\r\n\r\n    /**\r\n     * Getter confPassword\r\n     * @return {string}\r\n     */\r\n\tpublic get confPassword(): string {\r\n\t\treturn this._confPassword;\r\n\t}\r\n\r\n    /**\r\n     * Setter id\r\n     * @param {string} value\r\n     */\r\n\tpublic set id(value: string) {\r\n\t\tthis._id = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter firstName\r\n     * @param {string} value\r\n     */\r\n\tpublic set firstName(value: string) {\r\n\t\tthis._firstName = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter lastName\r\n     * @param {string} value\r\n     */\r\n\tpublic set lastName(value: string) {\r\n\t\tthis._lastName = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter middleName\r\n     * @param {string} value\r\n     */\r\n\tpublic set middleName(value: string) {\r\n\t\tthis._middleName = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter mobileNo\r\n     * @param {string} value\r\n     */\r\n\tpublic set mobileNo(value: string) {\r\n\t\tthis._mobileNo = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter address\r\n     * @param {string} value\r\n     */\r\n\tpublic set address(value: string) {\r\n\t\tthis._address = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter email\r\n     * @param {string} value\r\n     */\r\n\tpublic set email(value: string) {\r\n\t\tthis._email = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter userName\r\n     * @param {string} value\r\n     */\r\n\tpublic set userName(value: string) {\r\n\t\tthis._userName = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter password\r\n     * @param {string} value\r\n     */\r\n\tpublic set password(value: string) {\r\n\t\tthis._password = value;\r\n\t}\r\n\r\n    /**\r\n     * Setter confPassword\r\n     * @param {string} value\r\n     */\r\n\tpublic set confPassword(value: string) {\r\n\t\tthis._confPassword = value;\r\n  }\r\n  \r\n\r\n\r\n    /**\r\n     * Getter role\r\n     * @return {string}\r\n     */\r\n\tpublic get role(): string {\r\n\t\treturn this._role;\r\n\t}\r\n\r\n    /**\r\n     * Setter role\r\n     * @param {string} value\r\n     */\r\n\tpublic set role(value: string) {\r\n\t\tthis._role = value;\r\n\t}\r\n\r\n  \r\n  \r\n}\r\n","import { serializeAs, deserializeAs, Serialize } from 'cerialize';\r\nimport { TimeInterval } from 'rxjs/internal/operators/timeInterval';\r\nimport { Time } from '@angular/common';\r\n\r\nexport class FormMaster {\r\n  @serializeAs('name')\r\n  @deserializeAs('name')\r\n  private _name: string;\r\n\r\n  @serializeAs('email')\r\n  @deserializeAs('email')\r\n  private _email: string;\r\n\r\n  @serializeAs('mobileno')\r\n  @deserializeAs('mobileno')\r\n  private _mobileno: string;\r\n\r\n  @serializeAs('job')\r\n  @deserializeAs('job')\r\n  private _job: string;\r\n\r\n  @serializeAs('password')\r\n  @deserializeAs('password')\r\n  private _password: string;\r\n\r\n  @serializeAs('confpassword')\r\n  @deserializeAs('confpassword')\r\n  private _confpassword: string;\r\n\r\n  @serializeAs('isAuthenticated')\r\n  @deserializeAs('isAuthenticated')\r\n  private _isAuthenticated: boolean;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Getter name\r\n   * @return {string}\r\n   */\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Setter name\r\n   * @param {string} value\r\n   */\r\n  public set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  /**\r\n   * Getter email\r\n   * @return {string}\r\n   */\r\n  public get email(): string {\r\n    return this._email;\r\n  }\r\n\r\n  /**\r\n   * Getter mobileno\r\n   * @return {string}\r\n   */\r\n  public get mobileno(): string {\r\n    return this._mobileno;\r\n  }\r\n\r\n  /**\r\n   * Getter job\r\n   * @return {string}\r\n   */\r\n  public get job(): string {\r\n    return this._job;\r\n  }\r\n\r\n  /**\r\n   * Getter password\r\n   * @return {string}\r\n   */\r\n  public get password(): string {\r\n    return this._password;\r\n  }\r\n\r\n  /**\r\n   * Setter email\r\n   * @param {string} value\r\n   */\r\n  public set email(value: string) {\r\n    this._email = value;\r\n  }\r\n\r\n  /**\r\n   * Setter mobileno\r\n   * @param {string} value\r\n   */\r\n  public set mobileno(value: string) {\r\n    this._mobileno = value;\r\n  }\r\n\r\n  /**\r\n   * Setter job\r\n   * @param {string} value\r\n   */\r\n  public set job(value: string) {\r\n    this._job = value;\r\n  }\r\n\r\n  /**\r\n   * Setter password\r\n   * @param {string} value\r\n   */\r\n  public set password(value: string) {\r\n    this._password = value;\r\n  }\r\n\r\n  /**\r\n   * Getter confpassword\r\n   * @return {string}\r\n   */\r\n  public get confpassword(): string {\r\n    return this._confpassword;\r\n  }\r\n\r\n  /**\r\n   * Setter confpassword\r\n   * @param {string} value\r\n   */\r\n  public set confpassword(value: string) {\r\n    this._confpassword = value;\r\n  }\r\n\r\n  /**\r\n   * Getter isAuthenticated\r\n   * @return {boolean}\r\n   */\r\n  public get isAuthenticated(): boolean {\r\n    return this._isAuthenticated;\r\n  }\r\n\r\n  /**\r\n   * Setter isAuthenticated\r\n   * @param {boolean} value\r\n   */\r\n  public set isAuthenticated(value: boolean) {\r\n    this._isAuthenticated = value;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<simple-notifications [options]=\\\"options\\\"></simple-notifications>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { NgbModule, NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap'; //npm install --save @ng-bootstrap/ng-bootstrap\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './router/app-routing.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {\r\n  HashLocationStrategy,\r\n  LocationStrategy,\r\n  CommonModule\r\n} from '@angular/common';\r\n// import { LayoutModule } from '@angular/cdk/layout';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule, // platformBrowserDynamic is a function used to bootstrap an Angular application.\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    SharedModule.forRoot(),\r\n    NgbModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    // LayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    // HttpClient,\r\n    HttpModule,\r\n    \r\n    // FroalaEditorModule.forRoot(), FroalaViewModule.forRoot()\r\n    // HttpModule,\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n  ],\r\n  exports: [RouterModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { serializeAs, deserializeAs } from 'cerialize';\r\nexport class ResponseWrapperDTO {\r\n\r\n    @serializeAs('status')\r\n    @deserializeAs('status')\r\n    private _status: number;\r\n\r\n    @serializeAs('message')\r\n    @deserializeAs('message')\r\n    private _message: string;\r\n\r\n    @serializeAs('path')\r\n    @deserializeAs('path')\r\n    private _path: string;\r\n\r\n    @serializeAs('error')\r\n    @deserializeAs('error')\r\n    private _error: string;\r\n\r\n    @serializeAs('data')\r\n    @deserializeAs('data')\r\n    private _data: object;\r\n\r\n\r\n    @serializeAs('isResponseOnPage')\r\n    @deserializeAs('isResponseOnPage')\r\n    private _isResponseOnPage: boolean;\r\n\r\n    /**\r\n     * Getter data\r\n     * @return {object}\r\n     */\r\n    public get data(): object {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * Getter status\r\n     * @return {number}\r\n     */\r\n    public get status(): number {\r\n        return this._status;\r\n    }\r\n\r\n    /**\r\n     * Setter status\r\n     * @param {number} value\r\n     */\r\n    public set status(value: number) {\r\n        this._status = value;\r\n    }\r\n\r\n    /**\r\n     * Getter message\r\n     * @return {string}\r\n     */\r\n    public get message(): string {\r\n        return this._message;\r\n    }\r\n\r\n    /**\r\n     * Setter message\r\n     * @param {string} value\r\n     */\r\n    public set message(value: string) {\r\n        this._message = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Setter data\r\n     * @param {object} value\r\n     */\r\n    public set data(value: object) {\r\n        this._data = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter path\r\n     * @return {string}\r\n     */\r\n    public get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n\r\n    /**\r\n     * Setter path\r\n     * @param {string} value\r\n     */\r\n    public set path(value: string) {\r\n        this._path = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter error\r\n     * @return {string}\r\n     */\r\n    public get error(): string {\r\n        return this._error;\r\n    }\r\n\r\n    /**\r\n     * Setter error\r\n     * @param {string} value\r\n     */\r\n    public set error(value: string) {\r\n        this._error = value;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Getter isResponseOnPage\r\n     * @return {boolean}\r\n     */\r\n    public get isResponseOnPage(): boolean {\r\n        return this._isResponseOnPage;\r\n    }\r\n\r\n    /**\r\n     * Setter isResponseOnPage\r\n     * @param {boolean} value\r\n     */\r\n    public set isResponseOnPage(value: boolean) {\r\n        this._isResponseOnPage = value;\r\n    }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LW5hdi9DdXN0b21lci9jcmVhdGUtY3VzdG9tZXIvY3JlYXRlLWN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { CreateCustomerService } from './create-customer.service';\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n  constructor(public createCustomerService:CreateCustomerService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateCustomerService {\n\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LW5hdi9DdXN0b21lci9jdXN0b21lci1saXN0L2N1c3RvbWVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row page-titles\\\">\\r\\n  <div class=\\\"col-md-5 col-8 align-self-center\\\">\\r\\n    <h3 class=\\\"text-themecolor\\\">Customer</h3>\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li class=\\\"breadcrumb-item\\\">\\r\\n        <a >Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"breadcrumb-item active\\\">Customers</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-7 col-4 align-self-center\\\">\\r\\n    <div class=\\\"d-flex m-t-10 justify-content-end\\\">\\r\\n      <div class=\\\"d-flex m-r-20 m-l-10 hidden-md-down\\\">\\r\\n        <div class=\\\"chart-text m-r-10\\\">\\r\\n          <button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/home/work_area/item/item/create']\\\">\\r\\n            <i class=\\\"ti-plus\\\"></i> New</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"float-left form-inline\\\"> \\r\\n            <!-- viewItemService.paginationRequest. -->\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search Items..\\\" class=\\\"form-control\\\">\\r\\n            <!-- (ngModelChange)=\\\"viewItemService.getAllItems(undefined , viewItemService.paginationRequest.searchText)\\\"> -->\\r\\n        </div>\\r\\n        <div class=\\\"float-right\\\">\\r\\n            <!-- {{viewItemService.paginationResponse.totalElements}} -->\\r\\n          <label>Total Count : 10</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body no-padding\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table color-table info-table cursor_pointer\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>#No</th>\\r\\n                <!-- (click)=\\\"viewItemService.getAllItems(th.keyName)\\\" -->\\r\\n                <th>\\r\\n                  First Name\\r\\n                </th>\\r\\n                <th>\\r\\n                  Last Name\\r\\n                </th>\\r\\n                <th>\\r\\n                  Email\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <!-- viewItemService.allItem (dblclick)=\\\"viewItemService.goToItemDetailsPage(item.id)\\\" -->\\r\\n              <tr *ngFor=\\\"let item of customers\\\" >\\r\\n                <!-- <td>{{(+viewItemService.paginationResponse.startPos) + i}}</td> -->\\r\\n                <td>{{item.id}}</td>\\r\\n                <td>{{item.firstName}}</td>\\r\\n                <td>{{item.lastName}}</td>\\r\\n                <td>{{item.email}}</td>\\r\\n                <!-- <td class=\\\"anchor-group\\\">\\r\\n                  <a class=\\\"text-info\\\" (click)=\\\"viewItemService.goToEdit(item.id)\\\">\\r\\n                    <i class=\\\"ti-pencil-alt\\\"></i>\\r\\n                  </a>\\r\\n                  <a class=\\\"text-danger\\\" title=\\\"Delete\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteItem\\\" (click)=\\\"viewItemService.removeItem(item.id)\\\">\\r\\n                    <i class=\\\"ti-trash\\\"></i>\\r\\n                  </a>\\r\\n                </td> -->\\r\\n              </tr>\\r\\n              <!-- <tr *ngIf=\\\"viewItemService.allItem.length <= 0\\\">\\r\\n                <td colspan=\\\"5\\\">\\r\\n                  {{utilsService.serverVariableService.STRING_WHEN_NO_RECORDS_FOUND}}\\r\\n                </td>\\r\\n              </tr> -->\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"card-footer\\\" \\r\\n      *ngIf=\\\"viewItemService.paginationResponse.totalElements > viewItemService.paginationRequest.minimumPerPage\\\">\\r\\n        <div class=\\\"float-left\\\">\\r\\n          <div class=\\\"record\\\">\\r\\n            <div class=\\\"float-left page_dropdown\\\" *ngIf=\\\"viewItemService.paginationResponse.pageArray.length > 0\\\">\\r\\n              <techhive-multiselect [data]=\\\"viewItemService.paginationResponse.pageArray\\\" [settings]=\\\"utilsService.serverVariableService.dropdownSettingForPageOfPagination\\\"\\r\\n                [(ngModel)]=\\\"viewItemService.paginationRequest.pageNumber\\\" (onSelect)=\\\"viewItemService.changePage()\\\">\\r\\n              </techhive-multiselect>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"paginations_list float-right\\\">\\r\\n          <ul>\\r\\n            <li class=\\\"record\\\" *ngIf=\\\"viewItemService.paginationRequest.noOfRecordPerPageArray.length > 0\\\">\\r\\n              <techhive-multiselect [data]=\\\"viewItemService.paginationRequest.noOfRecordPerPageArray\\\" [settings]=\\\"utilsService.serverVariableService.dropdownSettingForRecordOfPagination\\\"\\r\\n                [(ngModel)]=\\\"viewItemService.paginationRequest.noOfRecords\\\" (onSelect)=\\\"viewItemService.changeNoOfRecord()\\\">\\r\\n              </techhive-multiselect>\\r\\n            </li>\\r\\n            <li class=\\\"prev\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"viewItemService.paginationResponse.first\\\" (click)=\\\"viewItemService.getPreviousData()\\\">\\r\\n                <i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </li>\\r\\n            <li class=\\\"pagination-number\\\">\\r\\n              <a>\\r\\n                {{+viewItemService.paginationResponse.startPos}}-{{ +viewItemService.paginationResponse.endPos}}\\r\\n              </a>\\r\\n            </li>\\r\\n            <li class=\\\"next\\\">\\r\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"viewItemService.paginationResponse.last\\\" (click)=\\\"viewItemService.getNextData()\\\">\\r\\n                <i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div id=\\\"deleteItem\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    Modal content\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>{{utilsService.CONFIRM_MSG_FOR_DELETE}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"viewItemService.deleteItem()\\\" data-dismiss=\\\"modal\\\">Yes</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { Customer } from 'src/app/customer';\r\nimport { CustomerListService } from './customer-list.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.css']\r\n})\r\nexport class CustomerListComponent implements OnInit {\r\n\r\n  private customers:Customer[];\r\n\r\n  constructor(private _customerService:CustomerListService, private _router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Customer } from 'src/app/customer';\r\n//import { Http, RequestOptions } from '@angular/http';\r\nimport{ Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerListService {\r\n\r\n  private customer:Customer;\r\n\r\n  constructor(private _http:Http) { }\r\n\r\n\r\n}\r\n","import { Route, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\r\n\r\nconst routesForItem: Route[] = [\r\n  { path: '', redirectTo: 'view-customer', pathMatch: 'full' },\r\n  {\r\n    path: 'view-customer', component: CustomerListComponent\r\n  },\r\n  {\r\n    path: 'customer/:operation', component: CreateCustomerComponent\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routesForItem)\r\n  ],\r\n  providers: [],\r\n  declarations: [CreateCustomerComponent,CustomerListComponent]\r\n})\r\nexport class CustomerModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LW5hdi9kYXNoYmFvcmQvZGFzaGJhb3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-12 col-md-12\\\">\\r\\n        <div class=\\\"card-body text-center m-t-20 m-b-20\\\">\\r\\n          <h1>RadheKrishna Software: </h1>\\r\\n          <h4> </h4>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Column -->\\r\\n      <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex flex-row\\\">\\r\\n              <div class=\\\"round round-lg align-self-center round-info\\\">\\r\\n                <i class=\\\"ti-wallet\\\"></i>\\r\\n              </div>\\r\\n              <div class=\\\"m-l-10 align-self-center\\\">\\r\\n                <h3 class=\\\"m-b-0 font-light\\\">\\r\\n                  <i class=\\\"fa fa-rupee-sign font17\\\"></i> 3249</h3>\\r\\n                <h5 class=\\\"text-muted m-b-0\\\">Total Visitors</h5>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-row\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Column -->\\r\\n      <!-- Column -->\\r\\n      <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex flex-row\\\">\\r\\n              <div class=\\\"round round-lg align-self-center round-warning\\\">\\r\\n                <i class=\\\"mdi mdi-cellphone-link\\\"></i>\\r\\n              </div>\\r\\n              <div class=\\\"m-l-10 align-self-center\\\">\\r\\n                <h3 class=\\\"m-b-0 font-lgiht\\\">2376</h3>\\r\\n                <h5 class=\\\"text-muted m-b-0\\\">Total Users</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Column -->\\r\\n      <!-- Column -->\\r\\n      <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex flex-row\\\">\\r\\n              <div class=\\\"round round-lg align-self-center round-primary\\\">\\r\\n                <i class=\\\"mdi mdi-cart-outline\\\"></i>\\r\\n              </div>\\r\\n              <div class=\\\"m-l-10 align-self-center\\\">\\r\\n                <h3 class=\\\"m-b-0 font-lgiht\\\">340</h3>\\r\\n                <h5 class=\\\"text-muted m-b-0\\\">Total Sales</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Column -->\\r\\n      <!-- Column -->\\r\\n      <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"d-flex flex-row\\\">\\r\\n              <div class=\\\"round round-lg align-self-center round-danger\\\">\\r\\n                <i class=\\\"mdi mdi-bullseye\\\"></i>\\r\\n              </div>\\r\\n              <div class=\\\"m-l-10 align-self-center\\\">\\r\\n                <h3 class=\\\"m-b-0 font-lgiht\\\">\\r\\n                  <i class=\\\"fa fa-rupee-sign font17\\\"></i> 687</h3>\\r\\n                <h5 class=\\\"text-muted m-b-0\\\">Total Orders</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Column -->\\r\\n    </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashbaord',\r\n  templateUrl: './dashbaord.component.html',\r\n  styleUrls: ['./dashbaord.component.css']\r\n})\r\nexport class DashbaordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LW5hdi9teS1uYXYuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header class=\\\"topbar\\\">\\r\\n  <nav class=\\\"navbar top-navbar navbar-expand-md navbar-light\\\">\\r\\n      <div class=\\\"navbar-header\\\">\\r\\n          <a class=\\\"navbar-brand\\\">\\r\\n              <b>\\r\\n                    <!-- {{utilsService.isUnsavedFromDetected}} -->\\r\\n                  <span class=\\\"text-white\\\">RadheKrishna Admin  </span>\\r\\n              </b>\\r\\n              <!-- <b><img src=\\\"assets/images/logo.png\\\" alt=\\\"homepage\\\" /> </b> -->\\r\\n          </a>\\r\\n      </div>\\r\\n      <!-- End Logo -->\\r\\n      <div class=\\\"navbar-collapse\\\">\\r\\n          <!-- toggle and nav items -->\\r\\n          <ul class=\\\"navbar-nav mr-auto mt-md-0\\\">\\r\\n              <!-- This is  -->\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link nav-toggler hidden-md-up text-muted waves-effect waves-dark\\\">\\r\\n                      <i class=\\\"mdi mdi-menu\\\"></i>\\r\\n                  </a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link sidebartoggler hidden-sm-down text-muted waves-effect waves-dark\\\">\\r\\n                      <i class=\\\"ti-menu\\\"></i>\\r\\n                  </a>\\r\\n              </li>\\r\\n              <!-- ============================================================== -->\\r\\n              <!-- Search -->\\r\\n              <!-- ============================================================== -->\\r\\n              <li class=\\\"nav-item hidden-sm-down search-box\\\">\\r\\n                  <a class=\\\"nav-link hidden-sm-down text-muted waves-effect waves-dark\\\">\\r\\n                      <i class=\\\"ti-search\\\"></i>\\r\\n                  </a>\\r\\n                  <form class=\\\"app-search\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search & enter\\\">\\r\\n                      <a class=\\\"srh-btn\\\">\\r\\n                          <i class=\\\"ti-close\\\"></i>\\r\\n                      </a>\\r\\n                  </form>\\r\\n              </li>\\r\\n          </ul>\\r\\n          <!-- User profile and search -->\\r\\n          <ul class=\\\"navbar-nav my-lg-0\\\">\\r\\n              <!-- Profile -->\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                    <!-- (click)=\\\"openSettings()\\\"   [routerLink]=\\\"[ '/home/work_area/setting/setting/organization-profile']\\\" -->\\r\\n                  <a  class=\\\"nav-link\\\" title=\\\"Settings\\\">\\r\\n                      <i class=\\\"ti-settings\\\"></i>\\r\\n                  </a>\\r\\n              </li>\\r\\n              <li class=\\\"nav-item dropdown\\\">\\r\\n                  <a class=\\\"nav-link dropdown-toggle text-muted waves-effect waves-dark\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\r\\n                      aria-expanded=\\\"false\\\">\\r\\n                      <img src=\\\"assets/img/users.png\\\" alt=\\\"user\\\" class=\\\"profile-pic\\\" />\\r\\n                  </a>\\r\\n                  <div class=\\\"dropdown-menu dropdown-menu-right scale-up\\\">\\r\\n                      <ul class=\\\"dropdown-user\\\">\\r\\n                          <li>\\r\\n                              <div class=\\\"dw-user-box\\\">\\r\\n                                  <div class=\\\"u-img\\\">\\r\\n                                      <img src=\\\"assets/img/users.png\\\" alt=\\\"user\\\">\\r\\n                                  </div>\\r\\n                                  <div class=\\\"u-text\\\">\\r\\n                                      <h4>{{myNavService.user.name?myNavService.user.name:'----'}}</h4>\\r\\n                                      <p class=\\\"text-muted\\\">{{myNavService.user.email?myNavService.user.email:'----'}}</p>\\r\\n                                      <a class=\\\"btn btn-rounded btn-danger btn-sm\\\">View Profile</a>\\r\\n                                  </div>\\r\\n                              </div>\\r\\n                          </li>\\r\\n                          <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n                          <li>\\r\\n                              <a>\\r\\n                                  <i class=\\\"ti-settings\\\"></i> Master Setting</a>\\r\\n                          </li>\\r\\n                          <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n                          <!-- (click)=\\\"homeService.logout()\\\" -->\\r\\n                          <li >\\r\\n                              <a (click)=\\\"myNavService.logout()\\\">\\r\\n                                  <i class=\\\"fa fa-power-off\\\"></i> Logout</a>\\r\\n                          </li>\\r\\n                      </ul>\\r\\n                  </div>\\r\\n              </li>\\r\\n\\r\\n          </ul>\\r\\n      </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<!-- Top header End -->\\r\\n\\r\\n\\r\\n<!-- Sidebar -->\\r\\n\\r\\n<aside class=\\\"left-sidebar\\\">\\r\\n  <!-- Sidebar scroll-->\\r\\n  <div class=\\\"scroll-sidebar\\\">\\r\\n      <!-- Sidebar navigation--> \\r\\n      <nav class=\\\"sidebar-nav\\\">\\r\\n            <!-- [hidden]=\\\"utilsService.showSettingsmenu\\\" -->\\r\\n          <ul  id=\\\"sidebarnav\\\">\\r\\n              <li>\\r\\n                  <a [routerLink]=\\\"['dashboard']\\\" [routerLinkActive]=\\\"['active']\\\" class=\\\"waves-effect waves-dark\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n                      <i class=\\\"mdi mdi-chart-bubble\\\"></i>\\r\\n                      <span class=\\\"hide-menu\\\">Dashboard</span>\\r\\n                  </a>\\r\\n              </li>\\r\\n              <li>\\r\\n                  <a [routerLink]=\\\"['customer/view-customer']\\\" [routerLinkActive]=\\\"['active']\\\" class=\\\"waves-effect waves-dark\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n                      <i class=\\\"mdi mdi-chart-bubble\\\"></i>\\r\\n                      <span class=\\\"hide-menu\\\"> Customer </span>\\r\\n                  </a>\\r\\n              </li>\\r\\n             \\r\\n          </ul>\\r\\n      </nav>\\r\\n      <!-- End Sidebar navigation -->\\r\\n  </div>\\r\\n  <!-- End Sidebar scroll-->\\r\\n  <!-- Bottom points-->\\r\\n  <div class=\\\"sidebar-footer\\\">\\r\\n      <a class=\\\"link width100\\\">\\r\\n          Version 1.9\\r\\n      </a>\\r\\n  </div>\\r\\n  <!-- End Bottom points-->\\r\\n</aside>\\r\\n\\r\\n<!-- page wrapper -->\\r\\n\\r\\n<!-- page wrapper -->\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n      <!-- <div class=\\\"lazyloader\\\" [hidden]=\\\"utilsService.loaderStart <= 0\\\"> -->\\r\\n      <!-- <div class=\\\"lazyloader\\\" [hidden]=\\\"utilsService.loaderStart <= 0\\\">\\r\\n          <div class=\\\"loaderinner\\\">\\r\\n              <div class=\\\"loader\\\"></div>\\r\\n          </div>\\r\\n      </div> -->\\r\\n      <footer class=\\\"footer\\\"> © 2018 Developed by TechHive </footer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n// import { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { UtilsService } from '../shared/service/utils.service';\r\nimport { MyNavService } from './my-nav.service';\r\n\r\n@Component({\r\n  selector: 'app-my-nav',\r\n  templateUrl: './my-nav.component.html',\r\n  styleUrls: ['./my-nav.component.css']\r\n})\r\nexport class MyNavComponent {\r\n\r\n  \r\n  constructor( public utilsService: UtilsService,public myNavService:MyNavService) {\r\n  }\r\n  ngOnInit() {\r\n    this.myNavService.getUserProfile();\r\n\r\n  }\r\n  \r\n  }\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n// import { MatGridListModule, MatCardModule, MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MyNavComponent } from './my-nav.component';\r\nimport { AuthGuard } from '../Auth/Auth-guard.service';\r\nimport { DashbaordComponent } from './dashbaord/dashbaord.component';\r\nimport { CustomerModule } from './Customer/customer.module';\r\n\r\nexport function loadCustomerModule() {\r\n  return CustomerModule;\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'work_area', pathMatch: 'full' },\r\n  {\r\n    path: 'work_area', component: MyNavComponent, canActivate: [AuthGuard], children: [\r\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n      { path: 'dashboard', component: DashbaordComponent },\r\n      { path: 'customer', loadChildren: loadCustomerModule }\r\n]\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  declarations: [\r\n      MyNavComponent,\r\n      DashbaordComponent,\r\n    ]\r\n})\r\nexport class MyNavModule {\r\n  constructor() {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UtilsService } from '../shared/service/utils.service';\r\nimport { User } from '../Model/User';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MyNavService {\r\n    \r\n    profileUrl: String;\r\n    name = \"savan\";\r\n    user = new User();\r\n    menuList = [\r\n        {'menuName':'Dashboard','url':''},\r\n        {'menuName':'About Us','url':''},\r\n        {'menuName':'Contact Us','url':''}\r\n    ];\r\n    constructor(public utilsService: UtilsService) { }\r\n\r\n    getUserProfile() {\r\n        // if (this.user.mapOfOtherDetails && this.user.mapOfOtherDetails['nameOfUserType']) {\r\n            // this.profileUrl = '/home/work_area/staff/profile';\r\n        // }\r\n        console.log(this.utilsService.getUserFromLocalStorage())\r\n        this.user = this.utilsService.getUserFromLocalStorage();\r\n        console.log(this.user.name);\r\n\r\n    }\r\n\r\n    public logout() {\r\n        localStorage.removeItem('users');\r\n        localStorage.removeItem('token');\r\n        // localStorage.removeItem('settingMenu');\r\n        localStorage.removeItem('isAuthenticate');\r\n        // this.router.navigate(['/signup/login']);\r\n        this.utilsService.redirectTo('/signup-login/signup/login');\r\n    }\r\n\r\n}\r\n","import { NgModule, Component, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupSigninModule } from '../signup-signin/signup-signin.module';\r\nimport { MyNavModule } from '../my-nav/my-nav.module';\r\nexport function loadSignUpModule() {\r\n  return SignupSigninModule;\r\n}\r\n\r\nexport function loadHomeModule() {\r\n  return MyNavModule;\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'signup-login', pathMatch: 'full' },\r\n  { path: 'signup-login', loadChildren: loadSignUpModule },\r\n  { path: 'home', loadChildren: loadHomeModule },\r\n  { path: '**', redirectTo: '404' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes, {\r\n    })\r\n  ],\r\n  exports: [RouterModule],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n@Pipe({ name: \"keys\", pure: false })\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value: any, args: any[] = null): any { \r\n    return Object.keys(value); //.map(key => value[key]);\r\n  }\r\n}\r\n","import { PipeTransform } from '@angular/core';\r\nimport { Pipe } from '@angular/core';\r\n\r\ndeclare var $: any;\r\n@Pipe({ name: 'orderBy' })\r\nexport class OrderBy implements PipeTransform {\r\n\r\n  transform(obj: any, [fieldName = '+']): any {\r\n    let isDescendingOrder = false;\r\n    if (fieldName.indexOf('-') >= 0) {\r\n      fieldName = fieldName.substr(1);\r\n      isDescendingOrder = true;\r\n    }\r\n    if (!Array.isArray(obj)) {\r\n      return obj;\r\n    }\r\n    if (!Array.isArray(fieldName) || (Array.isArray(fieldName) && fieldName.length === 1)) {\r\n      // Descending\r\n      if (isDescendingOrder) {\r\n        if ($.isNumeric(obj[0][fieldName])) {\r\n          return [...obj].sort((a, b) => b[fieldName] - a[fieldName]);\r\n        }\r\n        return [...obj].sort((a, b) => b[fieldName].localeCompare(a[fieldName]));\r\n      }\r\n\r\n      // Ascending\r\n      if ($.isNumeric(obj[0][fieldName])) {\r\n        return [...obj].sort((a, b) => a[fieldName] - b[fieldName]);\r\n      }\r\n      return [...obj].sort((a, b) => a[fieldName].localeCompare(b[fieldName]));\r\n    }\r\n  }\r\n}\r\n\r\n// Example: http://www.fueltravel.com/blog/migrating-from-angular-1-to-2-part-1-pipes/\r\n\r\n\r\n","// import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: 'OrderByDate'\r\n})\r\nexport class OrderByDatePipe implements PipeTransform {\r\n    constructor() {\r\n    }\r\n    transform(array: Array<string>, args: String): Array<string> {\r\n\r\n        if (!array || array === undefined || array.length === 0) { return null; }\r\n\r\n        array.sort((a: any, b: any) => {\r\n            const fd = a.createdDate;\r\n            const ffd = new Date(fd);\r\n            const sd = b.createdDate;\r\n            const fsd = new Date(sd);\r\n            if (args === 'lifo') {\r\n                if (ffd < fsd) {\r\n                    return 1;\r\n                } else if (ffd > fsd) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                if (ffd > fsd) {\r\n                    return 1;\r\n                } else if (ffd < fsd) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n        });\r\n        return array;\r\n    }\r\n}\r\n","// import * as _ from 'lodash';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: 'ShowNotiTime'\r\n})\r\nexport class ShowNotiTimePipe implements PipeTransform {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    transform(Dbdate: String, args: String) {\r\n        const date: number = new Date().getDate();\r\n        const month: number = new Date().getMonth() + 1;\r\n        const year: number = new Date().getFullYear();\r\n\r\n        const newDBdate = new Date(Dbdate.toString());\r\n        const dbDay = newDBdate.getDate();\r\n        const dbMonth = newDBdate.getMonth() + 1;\r\n        const dbYear = newDBdate.getFullYear();\r\n        if (date === dbDay && month === dbMonth && year === dbYear) {\r\n            return newDBdate.toLocaleTimeString();\r\n        } else {\r\n            return newDBdate.toLocaleString();\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class ServerVariableService {\r\n\r\n\r\n  API = 'API';\r\n  statusOfActionForNEW = 'new';\r\n  statusOfActionForAppoinment = 'appoinment';\r\n\r\n  USER_FOR_LOCAL_STORAGE = 'users';\r\n\r\n  IMAGE_PREFIX_URL = 'http://192.168.2.230:8088/clinic_management/';\r\n\r\n  /*Other API */\r\n  loginAPI = 'login';\r\n  FAIL_IMAGE_UPLOAD_RESULT = 'FAIL IMAGE UPLOAD';\r\n  registerHospitalMasterAPI = 'registerHospitalMaster';\r\n  addHospitalMasterAPI = 'addHospitalMaster';\r\n  uploadimageAPI = 'uploadimage';\r\n  uploadimageFromBase64API = 'uploadimageFromBase64';\r\n  uploadUserProfileAPI = 'uploadUserProfile';\r\n  registerDoctorAPI = 'registerDoctor';\r\n  checkforgotPasswordAPI = 'checkforgotPassword';\r\n  forgotPasswordAPI = 'forgotPassword';\r\n  addChangePasswordAPI = 'addChangePassword';\r\n  getDetailsForAngularDropDownAPI = 'getDetailsForAngularDropDown';\r\n  registerUserAPI = 'registerUser';\r\n  registerDoctorByParentAPI = 'registerDoctorByParent';\r\n  addPatientAPI = 'addPatient';\r\n  updatePatientAPI = 'updatePatient';\r\n  getAllDropDownForstaffAPI = 'getDataForNewStaff';\r\n  getAllDropDownForDoctorAPI = 'getDataForNewDoctor';\r\n  getAllDropDownForPatientAPI = 'getDataForNewPatient';\r\n  getDropdownDetailForCaseMasterAPI = 'getDropdownDetailForCaseMaster';\r\n  getDetailsForAngularDropDownForAddClinicAPI = 'getDetailsForAngularDropDownForAddClinic';\r\n  // API for getCategoryMaster Name;\r\n  getCategoryMasterNameAPI = 'getCategoryMasterName';\r\n\r\n  // static\r\n  getAllHospitalMasterNameAndIdByUserIdAPI = 'getAllHospitalMasterNameAndIdByUserId';\r\n\r\n  /*Get all API */\r\n  customer = \"customer\"\r\n  arrayOfapiNameToExcludeToken = ['auth/signin','auth/signup'];\r\n  getAllUserWithUserRoleAPI = 'getAllUserWithUserRole';\r\n  getAllCountryMastersAPI = 'getAllCountryMasters';\r\n  getAllStateMastersByCountryIdAPI = 'getAllStateMastersByCountryId';\r\n  getAllCityMastersByStateIdAPI = 'getAllCityMastersByStateId';\r\n  lazzyLoadingForGetAllPatientsAPI = 'lazzyLoadingForGetAllPatients';\r\n  getDetailsForAngularDropDownForTimeSlotAPI = 'getDetailsForAngularDropDownForTimeSlot';\r\n\r\n\r\n  /* Mixed API */\r\n  getMaxIdAPI = 'getMaxId';\r\n  getDoctorsOfGivenUserIdWithLazzyLoadingAPI = 'getDoctorsOfGivenUserIdWithLazzyLoading';\r\n  getUsersByTypeAndIdWithLazzyLoadingAPI = 'getUsersByTypeAndIdWithLazzyLoading';\r\n  getStaffsOfGivenUserIdWithLazzyLoadingAPI = 'getStaffsOfGivenUserIdWithLazzyLoading';\r\n  addStaffAPI = 'addStaff';\r\n  updateStaffAPI = 'updateStaff';\r\n  getHospitalMastersByUserIdWithLazzyLoadingAPI = 'getHospitalMastersByUserIdWithLazzyLoading';\r\n\r\n  /*Get By Id API */\r\n  getDropDownMenuDetailAPI = 'getDropDownMenuDetail';\r\n  getAllMenuForUserRoleRightsAPI = 'getAllMenuForUserRoleRights';\r\n  getAllStateMastersOfIndiaAPI = 'getAllStateMastersOfIndia';\r\n  /* save API */\r\n  saveUserAPI = 'saveUser';\r\n  loginCheckAPI = 'loginCheck';\r\n  deleteContentByIdAPI = 'deleteContentById';\r\n\r\n  /* Search Api  */\r\n  serachPatientByNameAndMobileNoAPI = 'serachPatientByNameAndMobileNo';\r\n\r\n  /* update  API */\r\n  updateForSpecialistMasterAPI = 'updateForSpecialistMaster';\r\n\r\n  /* lazzyLoading API */\r\n  lazzyLoadingForSpecialistMasterAPI = 'lazzyLoadingForSpecialistMaster';\r\n\r\n\r\n  /* Delete Record API  */\r\n  removeByIdForSpecialistMasterAPI = 'removeByIdForSpecialistMaster';\r\n\r\n  /* List table name  */\r\n  TABLE_NAME_FOR_USER_MASTER = 'tblUserMaster';\r\n  TABLE_NAME_FOR_CITY = 'tblCityMaster';\r\n  TABLE_NAME_FOR_STATE = 'tblStateMaster';\r\n  TABLE_NAME_FOR_USER_ROLE = 'tblUserRole';\r\n  TABLE_NAME_FOR_MENU_DETAILS = 'tblMenuDetails';\r\n  TABLE_NAME_FOR_USER_TYPE = 'tblUserType';\r\n  TABLE_NAME_FOR_HOSPITAL_MASTER = 'tblHospitalMaster';\r\n  TABLE_NAME_FOR_CATEGORY_MASTER = 'tblCategoryMaster';\r\n  TABLE_NAME_FOR_SPECIALIST_MASTER = 'tblSpecialistMaster';\r\n  TABLE_NAME_FOR_DOCTOR_SERVICE_MASTER = 'tblDoctorServiceMaster';\r\n  TABLE_NAME_FOR_HOSPITAL_SERVICE_MASTER = 'tblHospitalServiceMaster';\r\n  TABLE_NAME_FOR_CASE = 'tblStateMaster';\r\n  TABLE_NAME_FOR_FEES = 'tblFees';\r\n\r\n\r\n  /*list Of Socket API */\r\n\r\n  SEND_SOCKET_LOGIN = 'socketLogin';\r\n  RESPONSE_SOCKET_LOGIN = 'socketLoginResponse/';\r\n  RESPONSE_SOCKET_PROFILE_IMAGE_UPLOAD = 'socketUploadProfileResponse/';\r\n  SEND_SOCKET_LOGOUT = 'socketLogout';\r\n  RESPONSE_SOCKET_LOGOUT = 'socketLogoutResponse/';\r\n\r\n\r\n  /** FOR ADD NEW VARIABLE  */\r\n\r\n  PATIENT_MODEL_ID = 'Patient';\r\n  ADD_NEW_PATIENT: boolean ;\r\n  VARIABLE_FOR_PATIENT: String;\r\n\r\n  dropdownSettingForPageOfPagination = {\r\n    singleSelection: true,\r\n    text: 'Select Page',\r\n    selectAllText: 'Select All Page',\r\n    unSelectAllText: 'UnSelect All Page',\r\n    enableSearchFilter: true,\r\n    classes: 'myclass custom-class',\r\n    maxHeight: '100',\r\n    lazyloading: true,\r\n    allowClear: false\r\n  };\r\n  dropdownSettingForRecordOfPagination = {\r\n    singleSelection: true,\r\n    text: 'Select Record',\r\n    selectAllText: 'Select All Record',\r\n    unSelectAllText: 'UnSelect All Record',\r\n    enableSearchFilter: true,\r\n    classes: 'myclass custom-class',\r\n    maxHeight: '100',\r\n    lazyloading: true,\r\n    allowClear: false\r\n  };\r\n  /**\r\n  * Setting OF Techhive multiselect\r\n  * @param singleSelection // this parmas is define dropdown Allow Single Or Multiple.\r\n  * @param NameOfPlaceHolder // this params is define placeholder of dropdown.\r\n  * @param isDisabled // pass TRUE or FALSE for Disabled Dropdowm.\r\n  * @param isAllowClear // pass FALSE if You Don't Want To  CLEAR SELCTION Of Dropdown.\r\n  */\r\n  setSettingForDropDown(singleSelection, NameOfPlaceHolder, isDisabled?: boolean, isAllowClear?: boolean) {\r\n    return {\r\n      singleSelection: singleSelection,\r\n      text: 'Select ' + NameOfPlaceHolder,\r\n      selectAllText: 'Select All ' + NameOfPlaceHolder,\r\n      unSelectAllText: 'UnSelect All ' + NameOfPlaceHolder,\r\n      enableSearchFilter: true,\r\n      classes: 'myclass custom-class',\r\n      maxHeight: '100px',\r\n      disabled: isDisabled,\r\n      allowClear: isAllowClear\r\n    };\r\n  }\r\n\r\n  /* parent-child drop down setting */\r\n  setSettingForDropDownParentChild(singleSelection, NameOfPlaceHolder) {\r\n    return {\r\n      singleSelection: singleSelection,\r\n      text: 'Select ' + NameOfPlaceHolder,\r\n      selectAllText: 'Select All ' + NameOfPlaceHolder,\r\n      unSelectAllText: 'UnSelect All ' + NameOfPlaceHolder,\r\n      enableSearchFilter: true,\r\n      classes: 'myclass custom-class',\r\n      maxHeight: '100px',\r\n      groupBy: 'type'\r\n    };\r\n  }\r\n  /* End  */\r\n  constructor() { }\r\n}\r\n\r\n","import { isDate } from 'util';\r\n// import { PaginationResponse } from '../../model/PaginationResponse';\r\n// import { PaginationRequest } from '../../model/PaginationRequest';\r\nimport { Deserialize, Serialize } from 'cerialize';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { ServerVariableService } from './server-variable.service';\r\nimport { ValidationService } from './validation.service';\r\nimport { HttpErrorResponse, HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\n// import { NotificationsService } from 'angular2-notifications'; //npm install angular2-notifications\r\nimport { ResponseWrapperDTO } from '../../model/ResponseWrapperDTO';\r\nimport { User } from '../../Model/User'\r\n// import { OrganizationProfile } from '../../model/master/OrganizationProfile';\r\n// import { ToasterConfig, ToasterService } from 'angular2-toaster'; //npm install angular2-toaster\r\nimport { Location } from '@angular/common';\r\n// import * as jsPDF from 'jspdf';\r\n// import 'jspdf-autotable';\r\ndeclare var $: any;\r\n// import * as pdfMake from 'pdfmake/build/pdfmake.js';\r\n// import * as pdfFonts from 'pdfmake/build/vfs_fonts.js';\r\n// pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n// import * as html2canvas from 'html2canvas';\r\n@Injectable()\r\nexport class UtilsService {\r\n\r\n  static DEFAULT_SORT_COLUMN = 'createdDate';\r\n\r\n  priviousUrl: string;\r\n  currentUrl: string;\r\n  showSettingsmenu: boolean;\r\n  SUCCESS_REPONSE = 'success';\r\n  UNAPPLICABLE = 'UNAPPLICABLE';\r\n  FAIL_REPONSE = 'fail';\r\n  todayDate: Date = new Date();\r\n  yesterdayDate: Date = new Date(new Date().getTime() - 60 * 60 * 24 * 1000);\r\n  tommorrowDate: Date = new Date(new Date().getTime() + 60 * 60 * 24 * 1000);\r\n  ml = 2;\r\n\r\n  USER_PROFILE_PIC_URL = '';\r\n  // USER_PROFILE_PIC_URL = 'http://auroradiam.com:8088/clinic_management/' + this.getUserId() + '.jpg';\r\n  /***\r\n   * links for local PC\r\n   */\r\n  // URL = 'http://192.168.2.57:1337/';\r\n  URL = 'http://192.168.43.47:8080/api/';\r\n  // SOCKET_URL = 'http://192.168.2.52:8080/clinicSocketConnections';\r\n\r\n \r\n  ALREADY_AVAILABLE_RESULT = 'Already Available';\r\n  INVALID_START_DATE = 'invalid start date';\r\n  DELETE_RECORD = 'Successfully record deleted.';\r\n  CONFIRM_MSG_FOR_DELETE = 'Are you sure you want to delete this record ?';\r\n  // CONFIRM_MSG_FOR_VALID_NET_WEIGHT = 'Are you sure you want to save this record ?';\r\n  LEAVE_THIS_PAGE = 'Are you sure you want to leave this page ?';\r\n  loaderStart = 0;\r\n  checkGSTnumber = new RegExp('[0-9]{2}[A-Za-z]{5}[0-9]{4}[a-zA-Z][0-9]{1}[a-zA-Z]{1}[a-zA-Z0-9]{1}');\r\n  checkForMongoId = new RegExp('^[0-9a-fA-F]{24}$');\r\n  postMethod = 'POST';\r\n  getMethod = 'GET';\r\n  msgFromDeleteAPIOnConflicts: string;\r\n\r\n\r\n  // doc.save('table.pdf');\r\n\r\n  // public config: ToasterConfig =\r\n  //   new ToasterConfig({\r\n  //     showCloseButton: true,\r\n  //     tapToDismiss: false,\r\n  //     timeout: 1000,\r\n  //     animation: 'fade out',\r\n  //     limit: 1,\r\n  //     positionClass: 'toast-top-center',\r\n  //     newestOnTop: true,\r\n  //     mouseoverTimerStop: true\r\n  //   });\r\n\r\n  previousUrl: string;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    // public _service: NotificationsService,\r\n    public http: HttpClient,\r\n    public serverVariableService: ServerVariableService,\r\n    public validationService: ValidationService,\r\n    // public toasterService: ToasterService,\r\n    public location: Location,\r\n  ) {\r\n    // Only pt supported (not mm or in)\r\n    // const doc = new jsPDF('p', 'pt');\r\n    // doc.autoTable(columns, rows, {\r\n    //   styles: { fillColor: [100, 255, 255] },\r\n    //   columnStyles: {\r\n    //     id: { fillColor: 255 }\r\n    //   },\r\n    //   margin: { top: 60 },\r\n    //   addPageContent: function (data) {\r\n    //     doc.text('Header', 40, 30);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  fileSave() {\r\n    // const doc = new jsPDF('l', 'pt', 'a4');\r\n    // doc.text(\"From HTML\", 40, 50);\r\n    // doc.text( 40, 50);\r\n    // const res = doc.autoTableHtmlToJson(document.getElementById('tableForPDF'));\r\n    // doc.autoTable(res.columns, res.data, {\r\n    //   startY: 60\r\n    // });\r\n    // return doc;\r\n\r\n    // doc.autoTable(columns, rows, {\r\n    //  theme: \"grid\",\r\n    //  margin: 10,\r\n    //  styles: {\r\n    //    font: \"courier\",\r\n    //    fontSize: 12,\r\n    //    // overflow: \"linebreak\",\r\n    //    rowHeight: 8,\r\n    //    cellPadding: 1,\r\n    //    halign: \"left\"\r\n    //  }\r\n    // });\r\n    // doc.save();\r\n  }\r\n\r\n\r\n  // downloadPdfByElementId(elementId: string) {\r\n  //   html2canvas(document.getElementById(elementId))\r\n  //     .then((canvas) => {\r\n  //       const data = canvas.toDataURL();\r\n  //       const docDefinition = {\r\n  //         content: [{\r\n  //           image: data,\r\n  //           fit: [520, 100000]\r\n  //         }]\r\n  //       };\r\n  //       pdfMake.createPdf(docDefinition).download();\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log('error canvas', err);\r\n  //     });\r\n  // }\r\n  /**\r\n   * This Method Is Use From Remove Empty Element From Array\r\n   * @param test_array  your selected array pass as args.\r\n   */\r\n  removeEmptyElementsFromArray(test_array) {\r\n    let index = -1;\r\n    const arr_length = test_array ? test_array.length : 0;\r\n    let resIndex = -1;\r\n    const result = [];\r\n\r\n    while (++index < arr_length) {\r\n      const id = test_array[index];\r\n      if (id) {\r\n        result[++resIndex] = id;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /*\r\n  *\r\n  * Used to check if object ios empaty or not..!\r\n  * @param obj = 'indecated object which you want to check'\r\n  * return true if empty..!\r\n  */\r\n  isEmptyObject(obj) {\r\n    return (obj && (Object.keys(obj).length === 0));\r\n  }\r\n\r\n  /**\r\n   * This Method Is Use For Remove Blank And Null Key From Object.\r\n   */\r\n  customJsonInclude(obj) {\r\n    for (const key in obj) {\r\n      if (typeof obj[key] === 'object') {\r\n        if (obj[key] && obj[key].length > 0) {\r\n          obj[key] = this.removeEmptyElementsFromArray(obj[key]);\r\n        }\r\n        if (this.isEmptyObject(obj[key])) {\r\n          delete obj[key];\r\n        } else {\r\n          this.customJsonInclude(obj[key]);\r\n        }\r\n      } else {\r\n        if (obj[key] === undefined || obj[key] === null) {\r\n          delete obj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @author : abhay-suchak\r\n   * @param isDisplayToast display tost or not , pass true or false\r\n   * @param url API name\r\n   * @param params params\r\n   * @param callback response of server\r\n   */\r\n  postMethodAPI(isDisplayToast, apiName, params, callback: (response: any, isRoute: boolean) => void, isToastAndDataBothRequired?: boolean) {\r\n    this.loaderStart++;\r\n    this.customJsonInclude(params);\r\n    console.log(JSON.stringify(params));\r\n    let headers = new HttpHeaders();\r\n    if (!this.serverVariableService.arrayOfapiNameToExcludeToken.includes(apiName)) {\r\n      headers = headers.set('Authorization', 'Bearer ' + this.getToken());\r\n    }\r\n\r\n    apiName = this.URL + apiName;\r\n    return this.http.post(apiName, params, { headers: headers }).subscribe(response => {\r\n      console.log(response);\r\n      // Read the result field from the JSON response.\r\n      if (this.loaderStart > 0) {\r\n        this.loaderStart--;\r\n      }\r\n      // const serverResponse = Deserialize(response, ResponseWrapperDTO);\r\n      // if (!(serverResponse.status < 200 || serverResponse.status >= 300)) {\r\n      //   console.log('IF.. success response');\r\n      //   if (isDisplayToast) {\r\n      //     console.log('isdisplay message');\r\n          // this.setConfigAndDisplayPopUpNotification('success', '', serverResponse.message);\r\n          // if (isToastAndDataBothRequired) {\r\n          //   callback(serverResponse.data, true);\r\n          //   return;\r\n          // }\r\n          // callback(undefined, true);\r\n          // callback(serverResponse.data, true);\r\n          // return;\r\n        // }\r\n        // console.log('serverResponse.data' + serverResponse.data);\r\n        // if (serverResponse.data && typeof serverResponse.data !== 'string') {\r\n        //   console.log('string..');\r\n        // }\r\n        callback(response, true);\r\n      // }\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(`Backend returned code ${err.status}, body was: ${err.message}`);\r\n        if (err.status === 0) {\r\n          // this.CreateNotification('error', 'Error', 'Server down.');\r\n          // this.setConfigAndDisplayPopUpNotification('error', '', 'Server down..');\r\n        } else {\r\n          // const errorDTO = Deserialize(err.error, ResponseWrapperDTO);\r\n          // // if (errorDTO.message === ServerVariableService.UNAUTHORIZED_ERROR_MESSAGE) {\r\n          //   // this.homeService.logout();\r\n          // // }\r\n          // if (errorDTO.isResponseOnPage) {\r\n            callback(err.error, false);\r\n        //     window.scroll(0, 0);\r\n        //   } else {\r\n        //     // this.setConfigAndDisplayPopUpNotification('error', '', errorDTO.message ? errorDTO.message : errorDTO.error);\r\n        //   }\r\n        }\r\n        // this.loaderStart--;\r\n      }\r\n    );\r\n  }\r\n\r\n  toHttpParams(params) {\r\n    // console.log(params);\r\n    // console.log(Object.getOwnPropertyNames(params));\r\n    return Object.getOwnPropertyNames(params).filter(keys => {\r\n      console.log('key ::' + keys + 'param :: ' + params[keys]);\r\n      if (params[keys] === null || params[keys] === undefined) {\r\n        return;\r\n      }\r\n    }).reduce((p, key) =>\r\n      p.set(key, params[key]), new HttpParams()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @author : abhay-suchak\r\n   * @param API API name\r\n   * @param params params\r\n   * @param callback response of server\r\n   */\r\n  getMethodAPI(apiName, params, callback: (response) => void, noLoaderRequire?: boolean) {\r\n    this.loaderStart++;\r\n    if (noLoaderRequire) {\r\n      this.loaderStart--;\r\n    }\r\n    let httpParams = new HttpParams();\r\n    Object.keys(params).forEach(key => {\r\n      if (key && params[key] && params.hasOwnProperty(key) && !this.isEmptyObject(params[key])) {\r\n        httpParams = httpParams.append(key, params[key]);\r\n      }\r\n    });\r\n    let headers = new HttpHeaders();\r\n    if (!this.serverVariableService.arrayOfapiNameToExcludeToken.includes(apiName)) {\r\n      headers = headers.set('Authorization', 'Bearer ' + this.getToken());\r\n    }\r\n    apiName = this.URL + apiName;\r\n    return this.http.get(apiName, { params: httpParams, headers: headers }).subscribe(response => {\r\n      // Read the result field from the JSON response.\r\n      if (this.loaderStart > 0) {\r\n        this.loaderStart--;\r\n      }\r\n      // const serverResponse = Deserialize(response, ResponseWrapperDTO);\r\n\r\n      // if (serverResponse.status < 200 || serverResponse.status >= 300) {\r\n        // this.CreateNotification('error', 'Error..!', serverResponse.message);\r\n        // this.setConfigAndDisplayPopUpNotification('error', '', serverResponse.message);\r\n      // } else {\r\n        callback(response);\r\n      // }\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(`Backend returned code ${err.status}, body was: ${err.message}`);\r\n        if (err.status === 0) {\r\n          // this.CreateNotification('error', 'Error', 'Server down.');\r\n          // this.setConfigAndDisplayPopUpNotification('error', '', 'Server down..');\r\n        } else {\r\n          // const errorDTO = Deserialize(err.error, ResponseWrapperDTO);\r\n          // this.CreateNotification('error', 'Error', errorDTO.message ? errorDTO.message : errorDTO.error);\r\n          // this.setConfigAndDisplayPopUpNotification('error', '', errorDTO.message ? errorDTO.message : errorDTO.error);\r\n          callback(err.error);\r\n        }\r\n        this.loaderStart--;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @author : abhay-suchak\r\n   * @param isDisplayToast\r\n   * @param url\r\n   * @param params\r\n   * @param id\r\n   * @param callback\r\n   */\r\n  putMethodAPI(isDisplayToast, apiName, params, id, callback: (responseData: any, isRoute: boolean) => void, isCallbackRequired?: boolean) {\r\n\r\n    this.loaderStart++;\r\n    let headers = new HttpHeaders();\r\n    if (!this.serverVariableService.arrayOfapiNameToExcludeToken.includes(apiName)) {\r\n      headers = headers.set('Authorization', 'Bearer ' + this.getToken());\r\n    }\r\n    apiName = this.URL + apiName + '/' + id;\r\n    return this.http.put(apiName, params, { headers: headers }).subscribe(\r\n      response => {\r\n        // Read the result field from the JSON response.\r\n        if (this.loaderStart > 0) {\r\n          this.loaderStart--;\r\n        }\r\n        const serverResponse = Deserialize(response, ResponseWrapperDTO);\r\n        if (!(serverResponse.status < 200 || serverResponse.status >= 300)) {\r\n          if (isDisplayToast) {\r\n            // this.setConfigAndDisplayPopUpNotification('success', '', serverResponse.message);\r\n            callback(undefined, true);\r\n          }\r\n          if (serverResponse.data && typeof serverResponse.data !== 'string') {\r\n            console.log(serverResponse.data);\r\n            callback(serverResponse.data, true);\r\n          }\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(`Backend returned code ${err.status}, body was: ${err.message}`);\r\n        if (err.status === 0) {\r\n          // this.setConfigAndDisplayPopUpNotification('error', '', 'Server down..');\r\n        } else {\r\n          const errorDTO = Deserialize(err.error, ResponseWrapperDTO);\r\n          if (errorDTO.isResponseOnPage) {\r\n            window.scroll(0, 0);\r\n            callback(errorDTO.message, false);\r\n          } else {\r\n            // this.setConfigAndDisplayPopUpNotification('error', '', errorDTO.message ? errorDTO.message : errorDTO.error);\r\n            console.log(isCallbackRequired);\r\n            if (isCallbackRequired) {\r\n              callback(errorDTO.message, true);\r\n            }\r\n            // this.CreateNotification('error', 'Error', errorDTO.error);\r\n          }\r\n        }\r\n        this.loaderStart--;\r\n      });\r\n  }\r\n  /**\r\n   * @author : abhay-suchak\r\n   * @param isDisplayToast\r\n   * @param url\r\n   * @param params\r\n   * @param id\r\n   * @param callback\r\n   */\r\n  deleteMethodAPI(isDisplayToast, apiName, ob, callback: (response: any, isRoute: boolean) => void) {\r\n    let headers = new HttpHeaders();\r\n    if (!this.serverVariableService.arrayOfapiNameToExcludeToken.includes(apiName)) {\r\n      headers = headers.set('Authorization', 'Bearer ' + this.getToken());\r\n    }\r\n    apiName = this.URL + apiName;\r\n    console.log(JSON.stringify(ob));\r\n    Object.keys(ob).forEach(key => {\r\n      if (key && ob[key] && ob.hasOwnProperty(key) && !this.isEmptyObject(ob[key])) {\r\n        console.log('value ::' + ob[key]);\r\n        apiName += '/' + ob[key];\r\n        console.log('API  ::' + apiName);\r\n      }\r\n    });\r\n    return this.http.delete(apiName, { headers: headers }).subscribe(\r\n      response => {\r\n        // Read the result field from the JSON response.\r\n        if (this.loaderStart > 0) {\r\n          this.loaderStart--;\r\n        }\r\n\r\n        const serverResponse = Deserialize(response, ResponseWrapperDTO);\r\n        if (!(serverResponse.status < 200 || serverResponse.status >= 300)) {\r\n          if (isDisplayToast) {\r\n            // this.setConfigAndDisplayPopUpNotification('success', '', serverResponse.message);\r\n            // this.CreateNotification('success', 'Success..!', serverResponse.message);\r\n            callback(undefined, true);\r\n          }\r\n          if (serverResponse.data && typeof serverResponse.data !== 'string') {\r\n            callback(serverResponse.data, true);\r\n          }\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(`Backend returned code ${err.status}, body was: ${err.message}`);\r\n        if (err.status === 0) {\r\n          // this.CreateNotification('error', 'Error', 'Server down.');\r\n          // this.setConfigAndDisplayPopUpNotification('error', '', 'Server down..');\r\n        } else {\r\n          const errorDTO = Deserialize(err.error, ResponseWrapperDTO);\r\n          if (!errorDTO.isResponseOnPage) {\r\n            // callback(errorDTO.message, false);\r\n            this.msgFromDeleteAPIOnConflicts = errorDTO.message;\r\n            $('#deletConflicts').modal({\r\n              backdrop: 'static',\r\n              keyboard: false\r\n            });\r\n          } else {\r\n            // this.CreateNotification('error', 'Error', errorDTO.error);\r\n            // this.setConfigAndDisplayPopUpNotification('error', '', errorDTO.error ? errorDTO.error : errorDTO.message);\r\n          }\r\n        }\r\n        this.loaderStart--;\r\n      });\r\n  }\r\n\r\n  /**\r\n  * This method is used to check all checkbox of list if isCheckAll is true, otherwise it uncheck all checkboxes of list.\r\n  * @param isCheckAll : indicates true or false.\r\n  * @param detailsArray : indicates list that contains checkboxes.\r\n  */\r\n  checkAll(isCheckAll, detailsArray) {\r\n    detailsArray.forEach(ele => {\r\n      // if (ele.hasOwnProperty('selected')) {\r\n      ele.selected = isCheckAll;\r\n      // }\r\n    });\r\n    return isCheckAll;\r\n    // return detailsArray;\r\n  }\r\n  /***\r\n   * This method is used to make isCheckAll true if all checkboxes of list is checked, otherwise it makes isCheckAll to false;\r\n   * @param isSingleChecked : indicates true if user check checkbox of list otherwise indicates false.\r\n   * @param isCheckAll : indicates true of checkbox for all is checked otherwise indicates false.\r\n   * @param detailsArray : indicates list that contains checkboxes.\r\n   */\r\n  singleCheck(isSingleChecked, isCheckAll, detailsArray) {\r\n\r\n    if (!isSingleChecked) {\r\n      isCheckAll = false;\r\n      return isCheckAll;\r\n    }\r\n\r\n    for (const i in detailsArray) {\r\n      if (!detailsArray[i].selected) {\r\n        isCheckAll = false;\r\n        return isCheckAll;\r\n      }\r\n    }\r\n    isCheckAll = true;\r\n    return isCheckAll;\r\n  }\r\n  /**\r\n   * @author : abhay-suchak\r\n   * @param string\r\n   */\r\n  capitalizeFirstLetter(string) {\r\n    return string.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\r\n  }\r\n\r\n\r\n  // setConfigAndDisplayPopUpNotification(type, title, message) {\r\n  //   this.config.timeout = 0;\r\n  //   if (type === 'success') {\r\n  //     this.config.timeout = 2000;\r\n  //   }\r\n  //   this.toasterService.pop(type, title, message);\r\n  // }\r\n\r\n  /**\r\n   * This Method Is Used To Generate Notification.\r\n   * @param type which Type Of Notification You Used.\r\n   * @param message Message - Display As '..BIG FONT...'.\r\n   * @param content Message - Display As '..SMALL FONT...'.\r\n   */\r\n  // CreateNotification(type, message, content) {\r\n  //   let timeOut = 0;\r\n  //   if (type === 'success') {\r\n  //     timeOut = 5000;\r\n  //   }\r\n  //   this._service.create(\r\n  //     message,\r\n  //     content,\r\n  //     type,\r\n  //     {\r\n  //       timeOut: timeOut,\r\n  //       showProgressBar: true,\r\n  //       pauseOnHover: true,\r\n  //       clickToClose: true,\r\n  //       maxLength: 1000\r\n\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // resetAllNotification() {\r\n  //   this._service.remove();\r\n  // }\r\n\r\n  getMenu() {\r\n    return JSON.parse(localStorage.getItem('userMenus'));\r\n  }\r\n\r\n\r\n  isNullUndefinedOrBlank(obj) {\r\n    if (obj == null || obj === undefined || (obj === '' && obj !== 0)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getUserName() {\r\n\r\n    let user = new User();\r\n    user = JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE));\r\n    if (this.isEmptyObject(user)) {\r\n      return;\r\n    }\r\n    user = Deserialize(user, User);\r\n    return user ? user.userName.toString() : null;\r\n  }\r\n\r\n  // getOrganizationId() {\r\n  //   let user = new UserMaster();\r\n  //   user = JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE));\r\n  //   if (this.isEmptyObject(user)) {\r\n  //     return;\r\n  //   }\r\n  //   const org = Deserialize(user.organizationProfile, OrganizationProfile);\r\n  //   return org ? org.id : null;\r\n  // }\r\n  // getOrganizationName() {\r\n  //   let user = new UserMaster();\r\n  //   user = JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE));\r\n  //   if (this.isEmptyObject(user)) {\r\n  //     return;\r\n  //   }\r\n  //   const org: OrganizationProfile = Deserialize(user.organizationProfile, OrganizationProfile);\r\n  //   return org ? org.name : null;\r\n  // }\r\n\r\n  // getOrganizationCountryId() {\r\n  //   let user = new UserMaster();\r\n  //   user = JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE));\r\n  //   if (this.isEmptyObject(user)) {\r\n  //     return;\r\n  //   }\r\n  //   const org = Deserialize(user.organizationProfile, OrganizationProfile);\r\n  //   return org.idOfCountryMaster ? org.idOfCountryMaster : null;\r\n  // }\r\n\r\n  // getOrganizationStateId() {\r\n  //   let user = new UserMaster();\r\n  //   user = JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE));\r\n  //   if (this.isEmptyObject(user)) {\r\n  //     return;\r\n  //   }\r\n  //   const org = Deserialize(user.organizationProfile, OrganizationProfile);\r\n  //   return org.idOfStateMaster ? org.idOfStateMaster : null;\r\n  // }\r\n\r\n  getUserFromLocalStorage() {\r\n    if (this.isEmptyObject(JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE)))) {\r\n      return null;\r\n    }\r\n    return Deserialize(JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE)), User);\r\n  }\r\n\r\n  getUserId() {\r\n    if (this.isEmptyObject(JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE)))) {\r\n      return null;\r\n    }\r\n    let user = new User();\r\n    user = Deserialize(JSON.parse(localStorage.getItem(this.serverVariableService.USER_FOR_LOCAL_STORAGE)), User);\r\n    return user ? user.id : null;\r\n  }\r\n  isAuthenticated() {\r\n    return localStorage.getItem('isAuthenticate') ? localStorage.getItem('isAuthenticate') : null;\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n  }\r\n  getClientToken() {\r\n    return localStorage.getItem('clientToken') ? localStorage.getItem('clientToken') : null;\r\n  }\r\n\r\n\r\n  // .......... Start Pagination Related Methods ...............\r\n\r\n  // public getPreviousData(pagination: PaginationRequest) {\r\n  //   pagination.pageNumber = (+(pagination.pageNumber) - 1).toString();\r\n  // }\r\n  // public getNextData(pagination: PaginationRequest) {\r\n  //   pagination.pageNumber = (+(pagination.pageNumber) + 1).toString();\r\n  // }\r\n\r\n  // public changeNoOfRecord(pagination: PaginationRequest) {\r\n  //   pagination.pageNumber = String(1);\r\n  // }\r\n\r\n  // public setSortByKeyAndOrder(pagination: PaginationRequest, key: string) {\r\n  //   let className = '';\r\n  //   if (pagination.sortColumn && pagination.sortColumn === key) {\r\n  //     if (pagination.sortOrder === 'a') {\r\n  //       pagination.sortOrder = 'd';\r\n  //       className = 'shorting ti-arrow-up';\r\n  //     } else {\r\n  //       pagination.sortOrder = 'a';\r\n  //       className = 'shorting ti-arrow-down';\r\n  //     }\r\n  //   } else {\r\n  //     pagination.sortColumn = key;\r\n  //     pagination.sortOrder = 'a';\r\n  //     className = 'shorting ti-arrow-down';\r\n  //   }\r\n  //   pagination.classForUpDown = className;\r\n  // }\r\n\r\n  // setPaginationSetting(pagination: PaginationResponse) {\r\n  //   if (pagination) {\r\n  //     pagination.startPos = +pagination.pageable['offset'] + 1;\r\n  //     pagination.endPos = +pagination.pageable['offset'] + +pagination.size;\r\n  //     if (pagination.totalPages) {\r\n  //       for (let i = 1; i <= pagination.totalPages; i++) {\r\n  //         pagination.pageArray.push(\r\n  //           {\r\n  //             'id': i.toString(),\r\n  //             'name': 'Page ' + i\r\n  //           }\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return pagination;\r\n  // }\r\n\r\n  // setPaginationOnDeleteAndUpdateRecords(last: boolean, numberOfElements: number, paginationRequest: PaginationRequest) {\r\n  //   if (last && numberOfElements === 1) {\r\n  //     paginationRequest.pageNumber = '1';\r\n  //   }\r\n  //   return paginationRequest;\r\n  // }\r\n  // .......... End Pagination Related Methods ...............\r\n\r\n  redirectTo(...route) {\r\n    // console.log(route);\r\n    this.router.navigate(route);\r\n  }\r\n\r\n  ConvertModelIdToString(arrayOfKeys, array) {\r\n    const newArray = array;\r\n    const newarrayOfKeys = arrayOfKeys;\r\n    for (const keyName in newArray) {\r\n      if (arrayOfKeys.length > 0) {\r\n        if (newarrayOfKeys.includes(keyName)) {\r\n          if (typeof (newArray[keyName]) === 'object' && this.isEmptyObject(newArray[keyName])) {\r\n            newArray[keyName] = undefined;\r\n          }\r\n          if (!this.isNullUndefinedOrBlank(newArray[keyName])) {\r\n            newArray[keyName] = newArray[keyName].toString();\r\n          }\r\n          delete arrayOfKeys[newArray[keyName]];\r\n        }\r\n        if (arrayOfKeys.length > 0 && typeof (newArray[keyName]) === 'object') {\r\n          this.ConvertModelIdToString(arrayOfKeys, newArray[keyName]);\r\n        }\r\n      }\r\n    }\r\n    return newArray;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  checkPatternRegularExp(pattern, string) {\r\n    const regex1 = RegExp(pattern);\r\n    return regex1.test(string);\r\n  }\r\n\r\n\r\n  /**\r\n   * @author:Abhay-Suchak\r\n   * For Generate Random String.\r\n   */\r\n  randomString() {\r\n    let text = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 18; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n\r\n  /**\r\n   * @author Abhay-Suchak\r\n   * @param x staring which you want to trim\r\n   */\r\n  trimString(x) {\r\n    return x.replace(/^\\s+|\\s+$/gm, '');\r\n  }\r\n\r\n  /**\r\n* Setting OF Techhive multiselect\r\n* @param singleSelection // this parmas is define dropdown Allow Single Or Multiple.\r\n* @param NameOfPlaceHolder // this params is define placeholder of dropdown.\r\n* @param isDisabled // pass TRUE or FALSE for Disabled Dropdowm.\r\n* @param isAllowClear // pass FALSE if You Don't Want To  CLEAR SELCTION Of Dropdown.\r\n*/\r\n  setSettingForDropDown(singleSelection, NameOfPlaceHolder, isDisabled?: boolean, isAllowClear?: boolean) {\r\n    return {\r\n      singleSelection: singleSelection,\r\n      text: 'Select ' + NameOfPlaceHolder,\r\n      selectAllText: 'Select All ' + NameOfPlaceHolder,\r\n      unSelectAllText: 'UnSelect All ' + NameOfPlaceHolder,\r\n      enableSearchFilter: true,\r\n      classes: 'myclass custom-class',\r\n      maxHeight: '100px',\r\n      disabled: isDisabled,\r\n      showCheckbox: singleSelection ? false : true\r\n      // allowClear: isAllowClear\r\n    };\r\n  }\r\n\r\n  /* parent-child drop down setting */\r\n  setSettingForDropDownParentChild(singleSelection, NameOfPlaceHolder, groupBy?: string) {\r\n    return {\r\n      singleSelection: singleSelection,\r\n      text: 'Select ' + NameOfPlaceHolder,\r\n      selectAllText: 'Select All ' + NameOfPlaceHolder,\r\n      unSelectAllText: 'UnSelect All ' + NameOfPlaceHolder,\r\n      enableSearchFilter: true,\r\n      classes: 'myclass custom-class',\r\n      maxHeight: '100px',\r\n      groupBy: groupBy,\r\n      showCheckbox: singleSelection ? false : true\r\n    };\r\n  }\r\n\r\n  public loadScript(url: string) {\r\n    const body = <HTMLDivElement>document.body;\r\n    const script = document.createElement('script');\r\n    script.innerHTML = '';\r\n    script.src = url;\r\n    script.async = false;\r\n    script.defer = true;\r\n    body.appendChild(script);\r\n  }\r\n  setDropdownSettingForLazzyDropdown(singleSelection, NameOfPlaceHolder, isDisabled?: boolean, isAllowClear?: boolean, groupbyString?: string) {\r\n    return {\r\n      singleSelection: singleSelection,\r\n      text: 'Select ' + NameOfPlaceHolder,\r\n      selectAllText: 'Select All ' + NameOfPlaceHolder,\r\n      unSelectAllText: 'UnSelect All ' + NameOfPlaceHolder,\r\n      enableSearchFilter: true,\r\n      classes: 'myclass custom-class',\r\n      maxHeight: '100px',\r\n      disabled: isDisabled,\r\n      allowClear: (isAllowClear ? isAllowClear : true),\r\n      lazzyLoading: true,\r\n      groupBy: groupbyString,\r\n      badgeShowLimit: 3,\r\n      showCheckbox: singleSelection ? false : true\r\n    };\r\n  }\r\n  setSettingForLocalStorage(params) {\r\n    localStorage.setItem('settingMenu', params);\r\n  }\r\n  getSettingForLocalStorage() {\r\n    return localStorage.getItem('settingMenu');\r\n  }\r\n\r\n  gotoBackPage() {\r\n    this.location.back();\r\n  }\r\n\r\n  appendCurrentTimeToDate(dateObj) {\r\n    const date = new Date();\r\n    if (isDate(dateObj)) {\r\n      dateObj.setHours(date.getHours());\r\n      dateObj.setMinutes(date.getMinutes());\r\n      dateObj.setSeconds(date.getSeconds());\r\n      return dateObj;\r\n    }\r\n    return dateObj;\r\n  }\r\n  setDecimalPointValue(number: number): number {\r\n    return +number.toFixed(2);\r\n  }\r\n  isEmptyObjectOrNullUndefiend(...value) {\r\n    if (value && value.length > 0) {\r\n      for (let i = 0; i < value.length; i++) {\r\n        if (this.isNullUndefinedOrBlank(value[i]) || this.isEmptyObject(value[i])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  removeDublicateSpaceFromString(str?: string) {\r\n    return str.replace(/\\s+/g, ' ');\r\n  }\r\n\r\n  setZeroBeforeNumericValue(num: string, size?: number): string {\r\n    if (!size) {\r\n      size = 4;\r\n    }\r\n    let s = num + '';\r\n    while (s.length < size) {\r\n      s = '0' + s;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  isSuccessGetMethodResponse(response) {\r\n    if (!this.isNullUndefinedOrBlank(response) && response !== this.FAIL_REPONSE) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isNumber(value: string | number): boolean {\r\n    return !isNaN(Number(value.toString()));\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { INVALID } from '@angular/forms/src/model';\r\n\r\n@Injectable()\r\nexport class ValidationService {\r\n  constructor() {}\r\n\r\n  /* Variables for set Max Length  */\r\n  // AMOUNT START\r\n  AMOUNTPOINTLEFT = 7;\r\n  AMOUNTPOINTRIGHT = 2;\r\n  // AMOUNT END\r\n  HOSPITALNAME = 30;\r\n  FIRSTNAME = 30;\r\n  LASTNAME = 30;\r\n  MIDDLENAME = 30;\r\n  FULLNAME = 90;\r\n  MOBILENO = 13;\r\n  LANDLINENO = 11;\r\n  USERNAME = 12;\r\n  ADDRESS = 300;\r\n  EMAIL = 50;\r\n  PASSWORD = 32; // 700 at java side\r\n  QUALIFICATION = 30; // 100 at java side\r\n  PRACTICESINCE = 30;\r\n  AWARDSACHIEVEMENTS = 30; // 500 at java side\r\n  PROFESSIONALEXPEREINCE = 30;\r\n  AFFILIATEDASSOCIATEDWITH = 30;\r\n  PROVIDESERVICESINCE = 4;\r\n  STAFFSTRENGTH = 5;\r\n  FEES = 7;\r\n  MOBILEANDEMAIL = 50;\r\n  OTPINPUT = 8;\r\n  EMAILORUSERNAME = 50;\r\n  AGE = 3;\r\n  BLOODGROUP = 5;\r\n  REMARK = 300;\r\n  PINCODE = 6;\r\n  RECOMMENDEDBY = 30;\r\n  MEDICALHISTORY = 30;\r\n  USERTYPENAME = 30;\r\n  USERROLENAME = 30;\r\n  MINUTEPERPATIENT = 3;\r\n  PANCARDNO = 10;\r\n  GSTNO = 15;\r\n  ADHARNO = 12;\r\n  SEARCHTEXT = 50;\r\n  /* End variable for set Max Length  */\r\n\r\n  /* Variable for Min Length*/\r\n\r\n  MIN_HOSPITALNAME = 30;\r\n  MIN_FIRSTNAME = 2;\r\n  MIN_LASTNAME = 2;\r\n  MIN_MIDDLENAME = 2;\r\n  MIN_MOBILENO = 10;\r\n  MIN_USERNAME = 4;\r\n  MIN_ADDRESS = 50;\r\n  MIN_LANDLINENO = 11;\r\n  MIN_EMAIL = 50;\r\n  MIN_PASSWORD = 6;\r\n  MIN_QUALIFICATION = 30;\r\n  MIN_PRACTICESINCE = 30;\r\n  MIN_AWARDSACHIEVEMENTS = 30;\r\n  MIN_PROFESSIONALEXPEREINCE = 30;\r\n  MIN_AFFILIATEDASSOCIATEDWITH = 30;\r\n  MIN_PROVIDESERVICESINCE = 15;\r\n  MIN_STAFFSTRENGTH = 10;\r\n  MIN_FEES = 15;\r\n  MIN_MOBILEANDEMAIL = 18;\r\n  MIN_OTPINPUT = 8;\r\n  MIN_EMAILORUSERNAME = 30;\r\n  MIN_AGE = 3;\r\n  MIN_BLOODGROUP = 5;\r\n  MIN_REMARK = 25;\r\n  MIN_PINCODE = 6;\r\n  MIN_RECOMMENDEDBY = 30;\r\n  MIN_MEDICALHISTORY = 30;\r\n  MIN_USERTYPENAME = 30;\r\n  MIN_USERROLENAME = 30;\r\n  /* End Variable for Min Length*/\r\n\r\n  /* pattern use for validation */\r\n  // newpaat = /^([A-Za-z0-9][+-*/%])*$/;\r\n  NAME = /^([a-zA-Z][a-zA-Z\\s]*)$/; // use in specilstMaster and CategoryMaster\r\n  STATE_NAME = /^([a-zA-Z][a-zA-Z\\s]*)$/;\r\n  CITY_NAME = /^([a-zA-Z][a-zA-Z\\s]*)$/;\r\n  LANGUAGE_NAME = /^([a-zA-Z][a-zA-Z\\s]*)$/;\r\n  ONLY_NUMBERS = '^[0-9]*$';\r\n  // ONLY_NUMBERS_AND_DOT = /^[0-9.]{1,15}$/;\r\n  ONLY_NUMBERS_AND_DOT = /^[0-9]+(?:\\.[0-9]+)?$/;\r\n  PATTERN_FOR_ALPHABATES_AND_SPACE_AND_DASH_DIGIT = '^[a-zA-Z0-9- ]*$';\r\n  LAB_MASTER_NAME = /.*\\S.*/;\r\n  ONLY_SPACE_NOT_ALLOW = /.*\\S.*/;\r\n  // ONLY_SPACE_NOT_ALLOWsp = '^[0-9a-zA-Z \\b]+$';\r\n  ONLY_SPACE_AND_SPACIAL_CHARACTER_NOT_ALLOW = /^(?=.*[A-Za-z\\d])[A-Za-z\\d$@$!%*#?_\\-& ]{1,}$/;\r\n  PATTERN_FOR_ALPHANUMERIC_DIGIT_SPECIAL_ESCAPE_CHARS = /.*\\S.*/;\r\n  PATTERN_FOR_ONLY_ALPHABATES = '^[a-zA-Z]*$';\r\n  PATTERN_FOR_ALPHABATES_AND_SPACE_AND_DIGIT = '^[a-zA-Z0-9 ]*$';\r\n  PATTERN_FOR_ALPHABATES_AND_DIGIT = '^[a-zA-Z0-9]*$';\r\n  PATTERN_FOR_ALPHABATES_AND_SPACE = '^([a-zA-Z][a-zA-Z ]*)$';\r\n  PATTERN_FOR_ALPHABATES_NUMBER_AND_SPACE = '^([a-zA-Z0-9][a-zA-Z0-9 ]*)';\r\n  PATTERN_FOR_EMAIL = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n  // PATTERN_FOR_EMAIL = /^([a-zA-Z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3})$/;\r\n  // PATTERN_FOR_EMAIL = '[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}';\r\n  PATTERN_FOR_EMAIL_OR_PHONE_NO =\r\n    '^(?:([a-zA-Z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3})|([0-9]{10,13}))$';\r\n  PATTERN_FOR_EMAIL_OR_USERNAME =\r\n    '^(?:([a-zA-Z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3})|([a-zA-Z0-9]*))$';\r\n  PATTERN_FOR_PHONE_NO = '^[0-9]{10,13}$';\r\n  PATTERN_FOR_NUMBER = '^[0-9]*$';\r\n  PATTERN_FOR_PINCODE = '^[0-9]{6}$';\r\n  PATTERN_FOR_LANDLINE_NO = '^[0-9]{11}$';\r\n  PATTERN_FOR_ADHARCARD_NO = '^[0-9]{12}$';\r\n  PATTERN_FOR_PANCARD_NO = '^[A-Z]{5}[0-9]{4}[A-Z]{1}$';\r\n  PATTERN_FOR_PASSWORD =\r\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{6,32}$/;\r\n    // '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,32}$';\r\n  PATTERN_FOR_GST_NO = /\\d{2}[A-Z]{5}\\d{4}[A-Z]{1}\\d[Z]{1}[A-Z\\d]{1}/;\r\n  /* End pattern use for validation */\r\n\r\n  // validation message start\r\n  // SIGN UP START\r\n  REQUIRED_PANCARD_NO = 'PAN Card No. is required.';\r\n  REQUIRED_GST_NO = 'GST No. is required.';\r\n  REQUIRED_AADHAR_NO = 'Aadhaar No. is required.';\r\n\r\n  INVALID_PANCARD_NO = 'Please enter valid PAN Card No.';\r\n  INVALID_GST_NO = 'Please enter valid GST No.';\r\n  INVALID_AADHAR_NO = 'Please enter valid Aadhaar No.';\r\n  INVALID_DATE_OF_BIRTH = 'Please select valid Date of Birth.';\r\n  // SIGN UP END\r\n\r\n  // LOGIN\r\n  USERNAME_OR_EMAIL = 'Please enter valid Email or User Name.';\r\n  INVALID_LOGIN_PASSWORD = 'Please enter valid Password.';\r\n  // LOGIN END\r\n\r\n  /* Use for Masters  */\r\n  REQUIRED_CATEGORY_NAME = 'Category Name is required.';\r\n  REQUIRED_CITY_NAME = 'City Name is required.';\r\n  REQUIRED_STATE_NAME = 'State Name is required.';\r\n  REQUIED_LAB_REPORT_NAME = 'Lab Report Name is required.';\r\n  REQUIED_TREATMENT_NAME = 'Treatement Name is required.';\r\n  REQUIRED_SERVICE_NAME = 'Service Name is required.';\r\n  REQUIRED_LANGUAGE_NAME = 'Language Name is required.';\r\n  REQUIRED_SPECIALIST_NAME = 'Name is required.';\r\n  REQUIRED_ASSIGN_ROLE_NAME = 'Role name is required.';\r\n  REQUIRED_ROLE_NAME = 'User Role Name is required.';\r\n  REQUIRED_USER_ROLE_FOR_SYSTEM_ACCESS = 'Please select User Role.';\r\n\r\n  // validation message start\r\n\r\n  INVALID_NAME = 'Please enter valid Name.';\r\n  INVALID_SERVICE_NAME = 'Please enter valid Service Name.';\r\n  INVALID_CATEGORY_NAME = 'Please enter valid Category Name.';\r\n  INVALIDE_STATE_NAME = 'Please enter valid State Name.';\r\n  INVALIDE_CITY_NAME = 'Please enter valid City Name.';\r\n  INVALIDE_USER_ROLE_NAME = 'Please enter valid User Role Name.';\r\n  INVALIDE_LANGUAGE_NAME = 'Please enter valid Language Name.';\r\n  INVALID_LAB_REPORT_NAME = 'Please enter valid Lab Report Name.';\r\n  INVALID_TREATMENT_NAME = 'Please enter valid Treatement Name.';\r\n  INVALID_MOBILE_OR_EMAIL = 'Please enter your registered Mobile No./Email Id.';\r\n  INVALID_OTP = 'Please enter valid OTP.';\r\n  /* End Masters Message */\r\n\r\n  // validation message for add medicine\r\n  REQUIRED_MEDICINE_CODE = 'Medicine Code is requied.';\r\n  REQUIRED_MEDICINE_NAME = 'Medicine Name is requied.';\r\n  REQUIRED_GENERIC_NAME = 'Generic Name is requied.';\r\n  REQUIRED_BRAND_NAME = 'Brand Name is requied.';\r\n  REQUIRED_EXPIRY_DATE = 'Expiry Date is required.';\r\n  REQUIRED_MFG_DATE = 'Manufacture Date is required.';\r\n  REQUIRED_QTY = 'Qty is required.';\r\n  REQUIRED_PRICE = 'Price is required.';\r\n\r\n  INVALID_MEDICINE_CODE = 'Medicine Code allow only alphanumeric value.';\r\n  INVALID_MEDICINE_NAME = 'Medicine Name allow only alphanumeric value.';\r\n  INVALID_GENERIC_NAME = 'Generic Name allow only alphanumeric value.';\r\n  INVALID_BRAND_NAME = 'Please enter valid Brand Name.';\r\n  INVALID_EXPIRY_DATE = 'Expiry Date is required.';\r\n  INVALID_MFG_DATE = 'Manufacture Date is required.';\r\n  INVALID_QTY = 'Qty allow only numeric value.';\r\n  INVALID_PRICE = 'Price allow only numeric value.';\r\n\r\n  // end add medicine\r\n  // validation msg for add clinic\r\n  REQUIRED_CLINIC_NAME = 'Clinic Name is required.';\r\n  REQUIRED_SERVICES_PROVIDED = 'Plaese select Service Proveded.';\r\n  REQUIRED_SERVICES_PROVIDE_SERVICE_SINCE =\r\n    'Provide Service Since is required.';\r\n  REQUIRED_CLINIC_STAFF_STRENGTH = 'Clinic Staff Strength is required.';\r\n  REQUIRED_FEES = 'Fees is required.';\r\n  REQUIRED_LandLine_NUMBER = 'LandLine No. is required.';\r\n  INVALID_LANDLINE_NUMBER = 'Please enter valid LandLine No.';\r\n  REQUIRED_ADDRESS = 'Address is required.';\r\n  REQUIRED_CLINIC_ADDRESS = 'Address is required.';\r\n  INVALID_CLINIC_NAME = 'Clinic Name allow only alphanumeric value.';\r\n  INVALID_ERVICES_PROVIDE_SERVICE_SINCE =\r\n    'Provide Service Since allow only numeric value.';\r\n  INVALID_CLINIC_STAFF_STRENGTH =\r\n    'Clinic Staff Strength allow only numeric value.';\r\n  INVALID_FEES = 'Fees allow only numeric value.';\r\n  INVALID_ADDRESS = 'Please enter valid Address.';\r\n  // end add clinic\r\n\r\n  // use for comman\r\n  REQUIRED_FIRST_NAME = 'First Name is required.';\r\n  REQUIRED_LAST_NAME = 'Last Name is required.';\r\n  REQUIRED_EMAIL = 'Email is required.';\r\n  REQUIRED_JOB = 'Please select Job.';\r\n  REQUIRED_PASSWORD = 'Password is required.';\r\n  REQUIRED_CURRENT_PASSWORD = 'Current Password is required.';\r\n  REQUIRED_CONFIRM_PASSWORD = 'Confirm Password is required.';\r\n  REQUIRED_NEW_PASSWORD = 'New Password is required.';\r\n  REQUIRED_MOBILE_NO = 'Mobile No. is required.';\r\n  REQUIRED_USER_NAME = 'User Name is required.';\r\n  REQUIRED_MIDDLE_NAME = 'Middle Name is required.';\r\n  REQUIRED_PATIENT = 'Patient is required.';\r\n  REQUIRED_PATIENT_OR_VISITOR_NAME = 'Patient/Visitor Name is required.';\r\n\r\n  // validation msg for add staff\r\n\r\n  // validation msg for doctor registration Step 3\r\n  REQUIRED_QUALIFICATION = 'Qualification is required.';\r\n  REQUIRED_PRACTICESINCE = 'Practice Since is required.';\r\n  REQUIRED_AWARDSANDACHIEVEMENTS = 'Awards/Achievements is required.';\r\n  REQUIRED_PROFESSIONALEXPERIENCE = 'Prodessional Experience is required.';\r\n  REQUIRED_AFFILIATEDANDASSOCIATED = 'Affiliated/Associated is required.';\r\n  REQUIRED_MINUTE_PER_PATIENT = 'Minute Per Patient is required.';\r\n\r\n  INVALID_QUALIFICATION = 'Please enter valid Qualification.';\r\n  INVALID_PRACTICESINCE = 'Please enter valid Practice Since.';\r\n  INVALID_AWARDSANDACHIEVEMENTS = 'Please enter valid Awards/Achievements.';\r\n  INVALID_PROFESSIONALEXPERIENCE =\r\n    'Please enter valid Professional Experience.';\r\n  INVALID_AFFILIATEDANDASSOCIATED =\r\n    'Please enter valid Affiliated/Associated With.';\r\n  INVALID_MINUTE_PER_PATIENT = 'Minute Per Patient allow only numeric value.';\r\n\r\n  // end  validation msg for doctor registration Step 3\r\n  // validation Message for Timeslot Modal\r\n\r\n  REQUIRED_HOSPITAL = 'Please select Clinic.';\r\n  REQUIRED_USER = 'Please select Doctor.';\r\n  // validation Message for Timeslot Modal\r\n\r\n  REQUIRED_SYSTEM_ACCESS = 'Please select System Access.';\r\n  REQUIRED_CLINIC = 'Please select Clinic.';\r\n  REQUIRED_USER_ROLE = 'Please select System Access.';\r\n  REQUIRED_TYPE = 'Please select Type.';\r\n  REQUIRED_MENU = 'Please select Menu.';\r\n\r\n  REQUIRED_PREFFERED_LANGUAGE = 'Please select Preffered Language.';\r\n  REQUIRED_AGE = 'Age is required.';\r\n  REQUIRED_CITY = 'Please select City.';\r\n  REQUIRED_STATE = 'Please select State.';\r\n  REQUIRED_PINCODE = 'Pin Code is required.';\r\n  REQUIRED_CATEGORY = 'Please select Category';\r\n  REQUIRED_SPECIALIST = 'Please select Specialist.';\r\n\r\n  //  use For common msg for Invalid\r\n  INVALID_FIRST_NAME = 'First Name allow only alphabetic value.';\r\n  INVALID_LAST_NAME = 'Last Name allow only alphabetic value.';\r\n  INVALID_MIDDLE_NAME = 'Middle Name allow only alphabetic value.';\r\n  INVALID_USERNAME = 'User Name allow only alphanumerical value.';\r\n  INVALID_EMAIL = 'Please enter valid Email.';\r\n  INVALID_CURRENT_PASSWORD = 'Please enter valid Current Password.';\r\n  INVALID_PASSWORD =\r\n    'Should contains atleast 6 characters,one upper case letter,lower case letter,digit and special character like *,@,$.';\r\n  INVALID_CONFIRM_PASSOWRD = 'Confirm Password not matched.';\r\n  INVALID_MOBILE_NO = 'Please enter valid Mobile No.';\r\n  INVALID_ALTERNATIVE_NO = 'Please enter valid Alternate Mobile No.';\r\n  INVALID_TELEPHONE_NO = 'Please enter valid Telephone No.';\r\n  INVALID_AGE = 'Please enter valid Age.';\r\n  INVALID_BLOOD_GROUP = 'Please enter valid Blood Group.';\r\n  INVALID_REMARK = 'Please enter valid Remark.';\r\n  INVALID_PINCODE = 'Please enter valid Pin Code.';\r\n  INVALID_RECOMMENDEDBY = 'Please enter valid Recommended By.';\r\n  INVALID_TIMESLOT = 'Please enter valid Timeslot.';\r\n  REQUIRED_TIMESLOT = 'Timeslot is required.';\r\n  RETYPE_NEW_PASSWORD = 'Please Confirm Password.';\r\n  RETYPE_PASSWORD_NOT_MATCHED = 'Confirm Password not matched.';\r\n  INVALID_PATIENT_OR_VISITOR_NAME = 'Please enter valid Patient/Visitor Name.';\r\n\r\n  // end  use For common msg for Invalid\r\n\r\n  // validation msg for view patient FEES start\r\n  REQUIRED_FEES_AMOUNT = 'Fees Amount is required.';\r\n  REQUIRED_PAYMENT_MODE = 'Please select Payment Mode.';\r\n  REQUIRED_DATE = 'Please select valid Date.';\r\n  REQUIRED_PAYMENT_DATE = 'Please select valid Payment Date.';\r\n  REQUIRED_PAYMENT_AMOUNT = 'Payment Amount is required.';\r\n  REQUIRED_PAYMENT_DUE_AMOUNT = 'Payment Due Amount is required.';\r\n\r\n  INVALID_FEES_AMOUNT = 'Please enter valid Fees Amount.';\r\n  INVALID_PAYMENT_AMOUNT = 'Please enter valid Payment Amount.';\r\n  INVALID_PAYMENT_AMOUNT_GRETER_AMOUNT =\r\n    'Payment Amount should be less then Fees Amount.';\r\n  INVALID_PAYMENT_DUE_AMOUNT = 'Please enter valid Payment Due Amount.';\r\n  // validation msg for view patient end\r\n\r\n  // validation message end\r\n\r\n  /* Use for create case*/\r\n  SELECT_PATIENT_NAME = 'Please select Patient Name.';\r\n  CASE_DATE = 'Please select Date.';\r\n  REQUIRED_PROBLEM_DESCRIPTION_NAME = 'Problem Description is required.';\r\n  INVALID_PROBLEM_DESCRIPTION_NAME = 'Please enter valid Problem Description.';\r\n  /* End create case*/\r\n}\r\n","// import { SimpleNotificationsModule } from 'angular2-notifications';\r\n// import { NgDatepickerModule } from 'ng2-datepicker';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UtilsService } from './service/utils.service';\r\nimport { ServerVariableService } from './service/server-variable.service';\r\nimport { ValidationService } from './service/validation.service';\r\n// import { NguiAutoCompleteModule } from '@ngui/auto-complete';\r\nimport { OrderBy } from './pipe/OrderBy';\r\nimport { ShowNotiTimePipe } from './pipe/show-noti-time';\r\nimport { OrderByDatePipe } from './pipe/order-by-date.pipe';\r\n// import { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\n// import { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\n// import { TechhiveMultiSelectModule } from 'techhive-multiselect-dropdown/angular2-multiselect-dropdown';\r\nimport { AuthGuard } from '../Auth/Auth-guard.service';\r\nimport { KeysPipe } from './pipe/KeysPipe';\r\n// import { ImageCropperModule } from 'ngx-image-cropper';\r\n// import { StompService } from 'ng2-stomp-service';\r\n// import { AddPatientComponent } from '../home/patients/add-patient/add-patient.component';\r\n// import { CaseCreationService } from '../home/case-creation/case-creation.service';\r\n// import { AppointmentsService } from '../home/appointments/appointments.service';\r\n// import { NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\r\n//    MatGridListModule, MatMenuModule, MatCardModule } from '@angular/material';\r\n\r\n/**\r\n * you need to make the FormsModule accesible for other modules using this module.\r\n * For that you need to add the FormsModule component to the module exports array:\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    // NgDatepickerModule,\r\n    // SimpleNotificationsModule.forRoot(),\r\n    // NguiAutoCompleteModule,\r\n    // ReactiveFormsModule,\r\n    // DateInputsModule,\r\n    // TechhiveMultiSelectModule,\r\n    // DropDownsModule,\r\n    // ImageCropperModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    // MatToolbarModule,\r\n    // MatCardModule,\r\n    // MatButtonModule,\r\n    // MatSidenavModule,\r\n    // MatIconModule,\r\n    // MatListModule,\r\n    // MatGridListModule,\r\n    // MatMenuModule,\r\n    // NgbCarouselModule,\r\n    // NgDatepickerModule,\r\n    // SimpleNotificationsModule,\r\n    // NguiAutoCompleteModule,\r\n    ReactiveFormsModule,\r\n    OrderBy,\r\n    ShowNotiTimePipe,\r\n    OrderByDatePipe,\r\n    // DateInputsModule,\r\n    // TechhiveMultiSelectModule,\r\n    // DropDownsModule,\r\n    KeysPipe,\r\n    // ImageCropperModule,\r\n    // AddPatientComponent\r\n  ],\r\n  declarations: [OrderBy, ShowNotiTimePipe, OrderByDatePipe, KeysPipe,\r\n    //  AddPatientComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n  /**\r\n   * This static forRoot block (provides and configures services) is\r\n   * used in case of when we want use some services in one or more components.\r\n   */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        UtilsService, ValidationService, ServerVariableService, AuthGuard,\r\n        // StompService ,\r\n        //  CaseCreationService, AppointmentsService\r\n        ]\r\n    };\r\n  }\r\n}\r\n","module.exports = \".divider-text {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n.divider-text span {\\r\\n    padding: 7px;\\r\\n    font-size: 12px;\\r\\n    position: relative;   \\r\\n    z-index: 2;\\r\\n}\\r\\n.divider-text:after {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n    top: 55%;\\r\\n    left: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n.btn-facebook {\\r\\n    background-color: #405D9D;\\r\\n    color: #fff;\\r\\n}\\r\\n.btn-twitter {\\r\\n    background-color: #42AEEC;\\r\\n    color: #fff;\\r\\n}\\r\\n.height-inherit{\\r\\n    height: -webkit-fill-available;\\r\\n}\\r\\n.regi_img {\\r\\n    max-width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwLXNpZ25pbi9mb3JtLXN1Ym1pdC9mb3JtLXN1Ym1pdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsb0JBQW9CO0NBQ3ZCO0FBQ0Q7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixXQUFXO0NBQ2Q7QUFDRDtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLDhCQUE4QjtJQUM5QixTQUFTO0lBQ1QsUUFBUTtJQUNSLFdBQVc7Q0FDZDtBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLFlBQVk7Q0FDZjtBQUNEO0lBQ0ksMEJBQTBCO0lBQzFCLFlBQVk7Q0FDZjtBQUNEO0lBQ0ksK0JBQStCO0NBQ2xDO0FBQ0Q7SUFDSSxnQkFBZ0I7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9zaWdudXAtc2lnbmluL2Zvcm0tc3VibWl0L2Zvcm0tc3VibWl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2aWRlci10ZXh0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5kaXZpZGVyLXRleHQgc3BhbiB7XHJcbiAgICBwYWRkaW5nOiA3cHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICAgXHJcbiAgICB6LWluZGV4OiAyO1xyXG59XHJcbi5kaXZpZGVyLXRleHQ6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICB0b3A6IDU1JTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uYnRuLWZhY2Vib29rIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MDVEOUQ7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG4uYnRuLXR3aXR0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyQUVFQztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcbi5oZWlnaHQtaW5oZXJpdHtcclxuICAgIGhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTtcclxufVxyXG4ucmVnaV9pbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding: 0px !important\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"flex box-shadow mt-120 \\\">\\r\\n        <div class=\\\"regi_infograph\\\">\\r\\n          <img src=\\\"assets/img/radhekrishna.jpeg\\\" class=\\\"regi_img\\\">\\r\\n          <p class=\\\"text-center\\\">Have an account?\\r\\n            <a [routerLink]=\\\"['/signup-login/signup/login']\\\">Log In</a>\\r\\n          </p>\\r\\n        </div>\\r\\n        <div class=\\\"forms_regi\\\">\\r\\n          <h4>Profile</h4>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label>First Name</label>\\r\\n                <input [(ngModel)]=\\\"formSubmitService.registerUser.firstName\\\" [formControl]=\\\"formSubmitService.form.controls['firstname']\\\"\\r\\n                  type=\\\"text\\\" tabindex=\\\"1\\\" maxlength=\\\"{{utilsService.validationService.FIRSTNAME}}\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['firstname'].hasError('required') && formSubmitService.form.controls['firstname'].touched\\\">{{utilsService.validationService.REQUIRED_FIRST_NAME}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['firstname'].hasError('required') && !formSubmitService.form.controls['firstname'].valid && formSubmitService.form.controls['firstname'].touched\\\">{{utilsService.validationService.INVALID_FIRST_NAME}}</h6>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Middle Name</label>\\r\\n                <input [(ngModel)]=\\\"formSubmitService.registerUser.middleName\\\" [formControl]=\\\"formSubmitService.form.controls['middlename']\\\"\\r\\n                  type=\\\"text\\\" tabindex=\\\"2\\\" maxlength=\\\"{{utilsService.validationService.MIDDLENAME}}\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['middlename'].hasError('required') && formSubmitService.form.controls['middlename'].touched\\\">{{utilsService.validationService.REQUIRED_MIDDLE_NAME}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['middlename'].hasError('required') && !formSubmitService.form.controls['middlename'].valid && formSubmitService.form.controls['middlename'].touched\\\">{{utilsService.validationService.INVALID_MIDDLE_NAME}}</h6>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label>Last Name</label>\\r\\n                <input [(ngModel)]=\\\"formSubmitService.registerUser.lastName\\\" [formControl]=\\\"formSubmitService.form.controls['lastname']\\\"\\r\\n                  type=\\\"text\\\" tabindex=\\\"3\\\" maxlength=\\\"{{utilsService.validationService.LASTNAME}}\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['lastname'].hasError('required') && formSubmitService.form.controls['lastname'].touched\\\">{{utilsService.validationService.REQUIRED_LAST_NAME}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['lastname'].hasError('required') && !formSubmitService.form.controls['lastname'].valid && formSubmitService.form.controls['lastname'].touched\\\">{{utilsService.validationService.INVALID_LAST_NAME}}</h6>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group required \\\">\\r\\n                    <label>Mobile No.</label>\\r\\n                    <input [(ngModel)]=\\\"formSubmitService.registerUser.mobileNo\\\" [formControl]=\\\"formSubmitService.form.controls['mobileno']\\\"\\r\\n                      tabindex=\\\"8\\\" type=\\\"text\\\" maxlength=\\\"{{utilsService.validationService.MOBILENO}}\\\" class=\\\"form-control\\\">\\r\\n                    <h6 *ngIf=\\\"formSubmitService.form.controls['mobileno'].hasError('required') && formSubmitService.form.controls['mobileno'].touched\\\">{{utilsService.validationService.REQUIRED_MOBILE_NO}}</h6>\\r\\n                    <h6 *ngIf=\\\"!formSubmitService.form.controls['mobileno'].hasError('required') && !formSubmitService.form.controls['mobileno'].valid && formSubmitService.form.controls['mobileno'].touched\\\">{{utilsService.validationService.INVALID_MOBILE_NO}}</h6>\\r\\n                  </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label>Address</label>\\r\\n                <textarea [(ngModel)]=\\\"formSubmitService.registerUser.address\\\" [formControl]=\\\"formSubmitService.form.controls['address']\\\"\\r\\n                   tabindex=\\\"3\\\" maxlength=\\\"{{utilsService.validationService.ADDRESS}}\\\" class=\\\"form-control\\\"></textarea>\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['address'].hasError('required') && formSubmitService.form.controls['address'].touched\\\">{{utilsService.validationService.REQUIRED_ADDRESS}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['address'].hasError('required') && !formSubmitService.form.controls['address'].valid && formSubmitService.form.controls['address'].touched\\\">{{utilsService.validationService.INVALID_ADDRESS}}</h6>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n          </div>\\r\\n          <h4>Credential</h4>\\r\\n          <div class=\\\"row\\\">\\r\\n            \\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"form-group required mt-10\\\">\\r\\n                <label>Email</label>\\r\\n                <input maxlength=\\\"{{utilsService.validationService.EMAIL}}\\\" [(ngModel)]=\\\"formSubmitService.registerUser.email\\\" [formControl]=\\\"formSubmitService.form.controls['eMail']\\\"\\r\\n                  type=\\\"email\\\" tabindex=\\\"4\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['eMail'].hasError('required') && formSubmitService.form.controls['eMail'].touched\\\">{{utilsService.validationService.REQUIRED_EMAIL}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['eMail'].hasError('required') && !formSubmitService.form.controls['eMail'].valid && formSubmitService.form.controls['eMail'].touched\\\">{{utilsService.validationService.INVALID_EMAIL}}</h6>\\r\\n              </div>\\r\\n              <div class=\\\"form-group required mt-10\\\">\\r\\n                <label>Password</label>\\r\\n                <input maxlength=\\\"{{utilsService.validationService.PASSWORD}}\\\" [(ngModel)]=\\\"formSubmitService.registerUser.password\\\"\\r\\n                  tabindex=\\\"6\\\" [formControl]=\\\"formSubmitService.form.controls['passWord']\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['passWord'].hasError('required') && formSubmitService.form.controls['passWord'].touched\\\">{{utilsService.validationService.REQUIRED_PASSWORD}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['passWord'].hasError('required') && !formSubmitService.form.controls['passWord'].valid && formSubmitService.form.controls['passWord'].touched\\\">{{utilsService.validationService.INVALID_PASSWORD}}</h6>\\r\\n              </div>\\r\\n              \\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <div class=\\\"form-group required mt-10\\\">\\r\\n                <label>User Name</label>\\r\\n                <input [(ngModel)]=\\\"formSubmitService.registerUser.userName\\\" [formControl]=\\\"formSubmitService.form.controls['username']\\\"\\r\\n                  type=\\\"text\\\" tabindex=\\\"5\\\" maxlength=\\\"{{utilsService.validationService.USERNAME}}\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['username'].hasError('required') && formSubmitService.form.controls['username'].touched\\\">{{utilsService.validationService.REQUIRED_USER_NAME}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['username'].hasError('required') && !formSubmitService.form.controls['username'].valid && formSubmitService.form.controls['username'].touched\\\">{{utilsService.validationService.INVALID_USERNAME}}</h6>\\r\\n              </div>\\r\\n              <div class=\\\"form-group required mt-10\\\">\\r\\n                <label>Confirm Password</label>\\r\\n                <input maxlength=\\\"{{utilsService.validationService.PASSWORD}}\\\" [(ngModel)]=\\\"formSubmitService.confirmPassword\\\" [formControl]=\\\"formSubmitService.form.controls['confirmpassword']\\\"\\r\\n                  tabindex=\\\"7\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\r\\n                <h6 *ngIf=\\\"formSubmitService.form.controls['confirmpassword'].hasError('required') && formSubmitService.form.controls['confirmpassword'].touched\\\">{{utilsService.validationService.REQUIRED_CONFIRM_PASSWORD}}</h6>\\r\\n                <h6 *ngIf=\\\"!formSubmitService.form.controls['confirmpassword'].hasError('required') && (formSubmitService.registerUser.password != formSubmitService.confirmPassword) && formSubmitService.form.controls['confirmpassword'].touched\\\">{{utilsService.validationService.INVALID_CONFIRM_PASSOWRD}}</h6>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- action button -->\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 form_footer mt-20\\\">\\r\\n              \\r\\n              <div class=\\\"float-right\\\">\\r\\n                <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"goNext(1)\\\"> Next </button> -->\\r\\n                <!-- [disabled]=\\\"(!formSubmitService.form.valid || formSubmitService.registerUser.password != formSubmitService.confirmPassword)\\\" -->\\r\\n                <button class=\\\"btn btn-success\\\" tabindex=\\\"10\\\" \\r\\n                  (click)=\\\"formSubmitService.checkData()\\\">\\r\\n                  Register </button>{{formSubmitService.mayNav.name}}\\r\\n\\r\\n                <!-- <button class=\\\"btn btn-primary\\\"  (click)=\\\"formSubmitService.register()\\\"> Next </button> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--End action button -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"form-group\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"formSubmitService.checkData()\\\"> Create Account  </button>\\r\\n      </div>      \\r\\n   -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormSubmitService } from './form-submit.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\nimport { UtilsService } from '../../shared/service/utils.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-form-submit',\r\n  templateUrl: './form-submit.component.html',\r\n  styleUrls: ['./form-submit.component.css']\r\n})\r\nexport class FormSubmitComponent implements OnInit {\r\n  constructor(\r\n    public formSubmitService: FormSubmitService,\r\n    public formBuilder: FormBuilder,\r\n    public utilsService: UtilsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    $('.clockpicker').clockpicker({ format: 'mm:ss' });\r\n\r\n    this.formSubmitService.form = this.formBuilder.group({\r\n      'firstname': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_ALPHABATES_AND_SPACE)])],\r\n      'middlename': [null, Validators.compose([Validators.pattern(this.utilsService.validationService.PATTERN_FOR_ALPHABATES_AND_SPACE)])],\r\n      'lastname': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_ALPHABATES_AND_SPACE)])],\r\n      'eMail': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_EMAIL)])],\r\n      'passWord': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_PASSWORD)])],\r\n      'mobileno': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_PHONE_NO)])],\r\n      'username': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_ALPHABATES_AND_DIGIT)])],\r\n      'confirmpassword': [null, Validators.compose([Validators.required])],\r\n      'telephoneno': [null, Validators.compose([Validators.pattern(this.utilsService.validationService.PATTERN_FOR_PHONE_NO)])],\r\n      'address': [null, Validators.compose([Validators.pattern(this.utilsService.validationService.ONLY_SPACE_NOT_ALLOW)])],\r\n    });\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Deserialize, Serialize } from 'cerialize';\r\nimport { FormMaster } from '../../Model/formData';\r\nimport { UtilsService } from '../../shared/service/utils.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserMaster } from '../../Model/UserMaster';\r\nimport { MyNavService } from '../../my-nav/my-nav.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormSubmitService {\r\n  formData = new FormMaster();\r\n  form: FormGroup;\r\n  registerUser = new UserMaster();\r\n\r\n  // registerUser = {\r\n  //   \"name\":\"savan1\",\r\n  //   \"username\":\"savan1\",\r\n  //   \"email\":\"savan121@gmail.com\",\r\n  //   \"role\":[\"user\",\"pm\"],\r\n  //   \"password\":\"987654320\"\r\n  // };\r\n  constructor(public utilsService: UtilsService, public router: Router,public mayNav:MyNavService) {\r\n    console.log()\r\n  }\r\n\r\n  checkData() {\r\n    this.registerUser.role = 'Admin';\r\n    console.log(this.registerUser);\r\n    if (!this.form.valid || (this.formData.password !== this.formData.confpassword)) {\r\n      // this.utilsService.CreateNotification('error', ' Please fill all valid details.', '');\r\n      console.log('fill up all feild');\r\n      return;\r\n    }\r\n    const userDetail = Serialize(this.registerUser, UserMaster);\r\n\r\n    this.utilsService.postMethodAPI(\r\n      true,\r\n      \"auth/signup\",\r\n      userDetail,\r\n      response => {\r\n        console.log(response);\r\n        // if (!this.utilsService.isNullUndefinedOrBlank(response)) {\r\n        //   console.log('success');\r\n        //   this.formData = new FormMaster();\r\n        //   this.form.reset();\r\n        //   this.router.navigate(['/signup-login/signup/login']);\r\n        // } else {\r\n        //   console.log('failed');\r\n        // }\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \".divider-text {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n.divider-text span {\\r\\n    padding: 7px;\\r\\n    font-size: 12px;\\r\\n    position: relative;   \\r\\n    z-index: 2;\\r\\n}\\r\\n.divider-text:after {\\r\\n    content: \\\"\\\";\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n    top: 55%;\\r\\n    left: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n.btn-facebook {\\r\\n    background-color: #405D9D;\\r\\n    color: #fff;\\r\\n}\\r\\n.btn-twitter {\\r\\n    background-color: #42AEEC;\\r\\n    color: #fff;\\r\\n}\\r\\n.width-37pass{\\r\\n    width: 37px;\\r\\n}\\r\\n.height-inherit{\\r\\n    height: -webkit-fill-available;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwLXNpZ25pbi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsb0JBQW9CO0NBQ3ZCO0FBQ0Q7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixXQUFXO0NBQ2Q7QUFDRDtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLDhCQUE4QjtJQUM5QixTQUFTO0lBQ1QsUUFBUTtJQUNSLFdBQVc7Q0FDZDtBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLFlBQVk7Q0FDZjtBQUNEO0lBQ0ksMEJBQTBCO0lBQzFCLFlBQVk7Q0FDZjtBQUNEO0lBQ0ksWUFBWTtDQUNmO0FBRUQ7SUFDSSwrQkFBK0I7Q0FDbEMiLCJmaWxlIjoic3JjL2FwcC9zaWdudXAtc2lnbmluL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2aWRlci10ZXh0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5kaXZpZGVyLXRleHQgc3BhbiB7XHJcbiAgICBwYWRkaW5nOiA3cHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICAgXHJcbiAgICB6LWluZGV4OiAyO1xyXG59XHJcbi5kaXZpZGVyLXRleHQ6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICB0b3A6IDU1JTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uYnRuLWZhY2Vib29rIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MDVEOUQ7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG4uYnRuLXR3aXR0ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyQUVFQztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcbi53aWR0aC0zN3Bhc3N7XHJcbiAgICB3aWR0aDogMzdweDtcclxufVxyXG5cclxuLmhlaWdodC1pbmhlcml0e1xyXG4gICAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlO1xyXG59Il19 */\"","module.exports = \"<section id=\\\"wrapper\\\">\\r\\n    <div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/bg2.jpg);\\\">\\r\\n        <div class=\\\"login-box\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form_box form-horizontal form-material\\\">\\r\\n                    <div class=\\\"form-group \\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" tabindex=\\\"1\\\" placeholder=\\\"Username\\\" maxlength=\\\"{{utilsService.validationService.MAX_50}}\\\"\\r\\n                                [(ngModel)]=\\\"loginService.loginParamOb.username\\\" [formControl]=\\\"loginService.form.controls['username']\\\">\\r\\n                            <small class=\\\"text-danger\\\">\\r\\n                                <h6 *ngIf=\\\"(loginService.form.controls['username'].hasError('required') || !loginService.form.controls['username'].valid) && loginService.form.controls['username'].touched\\\">\\r\\n                                    {{utilsService.validationService.USERNAME_OR_EMAIL}}\\r\\n                                </h6>\\r\\n                            </small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"col-xs-12\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"password\\\" tabindex=\\\"2\\\" required=\\\"\\\" placeholder=\\\"Password\\\"\\r\\n                                maxlength=\\\"{{utilsService.validationService.MAX_32}}\\\" [(ngModel)]=\\\"loginService.loginParamOb.password\\\"\\r\\n                                [formControl]=\\\"loginService.form.controls['password']\\\">\\r\\n                            <small class=\\\"text-danger\\\">\\r\\n                                <!-- <h6 *ngIf=\\\"(loginService.form.controls['password'].hasError('required') || !loginService.form.controls['password'].valid) && loginService.form.controls['password'].touched\\\">{{utilsService.validationService.INVALID_LOGIN_PASSWORD}}</h6> -->\\r\\n                            </small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-check clearfix\\\">\\r\\n                        <div class=\\\"float-right\\\">\\r\\n                            <a [routerLink]=\\\"['/signup-login/forgot-password']\\\">Forgot Password ?</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group text-center m-t-20\\\">\\r\\n                            <div class=\\\"col-xs-12\\\">\\r\\n                                <button tabindex=\\\"3\\\"  (click)=\\\"loginService.checkLoginForm()\\\" class=\\\"btn btn-success  btn-block \\\"\\r\\n                                    type=\\\"submit\\\">Log In</button>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group mt-20 clearfix\\\">\\r\\n                        <div class=\\\"float-right\\\">\\r\\n                            <p class=\\\"text-center\\\">Dont't have an account?\\r\\n                                <a [routerLink]=\\\"['/signup-login/signup/form']\\\">Sign Up</a>\\r\\n                            </p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { UtilsService } from '../../shared/service/utils.service';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(public loginService: LoginService,public formBuilder: FormBuilder, public utilsService:UtilsService) {}\r\n\r\n  ngOnInit() {\r\n    this.loginService.form = this.formBuilder.group({\r\n      // 'username': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_EMAIL_OR_USERNAME)])],\r\n      'username': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_ALPHANUMERIC_DIGIT_SPECIAL_ESCAPE_CHARS)])],\r\n      'password': [null, Validators.compose([Validators.required, Validators.pattern(this.utilsService.validationService.PATTERN_FOR_PASSWORD)])]\r\n    });\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FormMaster } from '../../Model/formData';\r\nimport { UtilsService } from '../../shared/service/utils.service';\r\nimport { serialize } from '../../../../node_modules/cerialize';\r\nimport { Serialize, Deserialize } from 'cerialize';\r\nimport { Router } from '../../../../node_modules/@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { User } from '../../Model/User';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  loginParamOb: {\r\n    username: string,\r\n    password: string,\r\n  } = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  form: FormGroup;\r\n  constructor(public utilsService: UtilsService, public router: Router) { }\r\n\r\n  checkLoginForm() {\r\n    console.log(this.loginParamOb);\r\n    this.utilsService.postMethodAPI(true, 'auth/signin', this.loginParamOb, (response) => {\r\n      console.log(response);\r\n      if (!this.utilsService.isNullUndefinedOrBlank(response)) {\r\n        this.setLocalStorage(response).then(() => {\r\n          this.utilsService.redirectTo('/home/work_area/dashboard');\r\n          // this.stompWebsocketService.sendLoginMsg(JSON.stringify({ 'sendUserName': 'test', 'msg': 'login Message' }));\r\n        }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  setLocalStorage(res) {\r\n    const promise = new Promise((resolve, reject) => {\r\n        try {\r\n            localStorage.setItem('users', Deserialize(JSON.stringify(res.loginResponse), User));\r\n            localStorage.setItem('token', res.accessToken);\r\n            localStorage.setItem('isAuthenticate', 'true');\r\n            resolve();\r\n        } catch (error) {\r\n            reject();\r\n        }\r\n    });\r\n    return promise;\r\n}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC1zaWduaW4vc2lnbnVwLXNpZ25pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { SignupSigninService } from './signup-signin.service';\r\ndeclare let paypal: any;\r\n@Component({\r\n  selector: 'app-signup-signin',\r\n  templateUrl: './signup-signin.component.html',\r\n  styleUrls: ['./signup-signin.component.css']\r\n})\r\nexport class SignupSigninComponent {\r\n  constructor(public signupSigninService: SignupSigninService) {}\r\n  // addScript: boolean;\r\n  // paypalLoad: boolean;\r\n\r\n  // finalAmount: number;\r\n\r\n  // paypalConfig = {\r\n  //   env: 'sandbox',\r\n  //   client: {\r\n  //     sandbox: 'AZDxjDScFpQtjWTOUtWKbyN_bDt4OgqaF4eYXlewfBP4-8aqX3PiV8e1GWU6liB2CUXlkA59kJXE7M6R',\r\n  //     production: '<your-production-key here>'\r\n  //   },\r\n  //   commit: true,\r\n  //   payment: (data, actions) => {\r\n  //     return actions.payment.create({\r\n  //       payment: {\r\n  //         transactions: [\r\n  //           { amount: { total: this.finalAmount, currency: 'INR' } }\r\n  //         ]\r\n  //       }\r\n  //     });\r\n  //   },\r\n  //   onAuthorize: (data, actions) => {\r\n  //     return actions.payment.execute().then((payment) => {\r\n  //       // Do something when payment is successful.\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // ngAfterViewChecked(): void {\r\n  //   if (!this.addScript) {\r\n  //     this.addPaypalScript().then(() => {\r\n  //       paypal.Button.render(this.paypalConfig, '#paypal-checkout-btn');\r\n  //       this.paypalLoad = false;\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // addPaypalScript() {\r\n  //   this.addScript = true;\r\n  //   return new Promise((resolve, reject) => {\r\n  //     const scripttagElement = document.createElement('script');\r\n  //     scripttagElement.src = 'https://www.paypalobjects.com/api/checkout.js';\r\n  //     scripttagElement.onload = resolve;\r\n  //     document.body.appendChild(scripttagElement);\r\n  //   });\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule, Route } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SignupSigninComponent } from './signup-signin.component';\r\nimport { FormSubmitComponent } from './form-submit/form-submit.component';\r\n// import { SignupAuthguardService } from '../Auth/signup-authguard.service';\r\nimport { AuthGuard } from '../Auth/Auth-guard.service';\r\n\r\nconst routesForSingUp: Route[] = [\r\n  { path: '', redirectTo: 'signup', pathMatch: 'full' },\r\n  { path: 'signup', component: SignupSigninComponent, children: [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'form', component: FormSubmitComponent },\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n      SharedModule,\r\n       RouterModule.forChild(routesForSingUp)],\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupSigninComponent,\r\n    FormSubmitComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class SignupSigninModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupSigninService {\r\n  FormVariable = {};\r\n  constructor() {}\r\n\r\n  modelChanged(event) {\r\n    console.log(event);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}